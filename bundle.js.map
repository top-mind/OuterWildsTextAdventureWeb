{
  "version": 3,
  "sources": ["src/compat.ts", "src/AudioManager.ts", "src/Enums.ts", "src/Vector2.ts", "src/Entity.ts", "src/Button.ts", "src/Screen.ts", "src/Translator.ts", "src/DatabaseScreen.ts", "src/GlobalMessenger.ts", "src/PlayerData.ts", "src/GameSave.ts", "src/TitleScreen.ts", "src/EventScreen.ts", "src/ScreenManager.ts", "src/ExploreData.ts", "src/Telescope.ts", "src/Node.ts", "src/NodeConnection.ts", "src/Sector.ts", "src/ExploreScreen.ts", "src/NodeAction.ts", "src/SectorEditor.ts", "src/SectorScreen.ts", "src/SectorTelescopeScreen.ts", "src/AnglerfishNode.ts", "src/QuantumNode.ts", "src/SectorLibrary.ts", "src/SolarSystem.ts", "src/SectorButtons.ts", "src/SolarSystemScreen.ts", "src/SupernovaScreen.ts", "src/GameManager.ts", "src/Locator.ts", "src/StatusFeed.ts", "src/TimeLoop.ts", "src/app.ts"],
  "sourcesContent": ["import { SoundFile } from \"p5\";\n\nconst preloadCache: Record<string, any> = {};\n\nexport function println(...args: any[]) {\n    console.log(...args);\n}\n\nexport function preloadJSONObject(path: string): void {\n    preloadCache[path] = loadJSON(path);\n}\n\nexport function preloadAudio(path: string): void {\n    preloadCache[path] = loadSound(path);\n}\n\nexport function loadJSONObject(path: string): JSONObject {\n    if (path in preloadCache) {\n        return new JSONObject(preloadCache[path])\n    } else {\n        throw new Error(`JSON object was not preloaded! Path: ${path}`);\n    }\n}\n\nexport function saveJSONObject(obj: JSONObject, path: string): void {\n    throw new Error(\"Method not implemented.\");\n}\n\nexport function exit() {\n    window.location.reload();\n}\n\nexport class Minim {\n    loadFile(path: string): AudioPlayer {\n        if (path in preloadCache) {\n            const sound = preloadCache[path];\n            return new AudioPlayer(sound);\n        } else {\n            throw new Error(`Audio file was not preloaded! Path: ${path}`);\n        }\n    }\n}\n\nexport class AudioPlayer {\n    private _sound: SoundFile;\n\n    constructor(sound: SoundFile) {\n        this._sound = sound;\n    }\n\n    play() {\n        this._sound.play();\n    }\n    pause() {\n        this._sound.pause();\n    }\n}\n\nexport class JSONArray {\n    private _data: any[];\n\n    constructor(data: any[] = []) {\n        this._data = data;\n    }\n\n    size(): number {\n        return this._data.length;\n    }\n    getJSONObject(index: number): JSONObject {\n        const value = this._data[index];\n        if (typeof value === 'object' && !(value instanceof JSONObject)) {\n            return new JSONObject(value);\n        }\n        return value;\n    }\n    getString(index: number): string {\n        return this._data[index];\n    }\n    toJSON(key: string): any {\n        return this._data;\n    }\n}\n\nexport class JSONObject {\n    private _data: Record<string, any>;\n\n    constructor(data: Record<string, any> = {}) {\n        this._data = data;\n    }\n\n    hasKey(key: string): boolean {\n        return key in this._data;\n    }\n    getFloat(key: string, defaultValue?: number): number {\n        const value = this._data[key];\n        if (value === null || value === undefined) return defaultValue;\n        if (typeof value === 'number') return value;\n        return Number(value);\n    }\n    getInt(key: string, defaultValue?: number): number {\n        const value = this._data[key];\n        if (value === null || value === undefined) return defaultValue;\n        if (typeof value === 'number') return value;\n        return Number(value);\n    }\n    getString(key: string, defaultValue?: string): string {\n        const value = this._data[key];\n        if (value === null || value === undefined) return defaultValue;\n        if (typeof value === 'string') return value;\n        return JSON.stringify(value);\n    }\n    getBoolean(key: string, defaultValue?: boolean): boolean {\n        const value = this._data[key];\n        if (value === null || value === undefined) return defaultValue;\n        if (typeof value === 'boolean') return value;\n        return Boolean(value);\n    }\n    getJSONArray(key: string): JSONArray {\n        const value = this._data[key];\n        if (Array.isArray(value) && !(value instanceof JSONArray)) {\n            return new JSONArray(value);\n        }\n        return key in this._data ? value : null;\n    }\n    getJSONObject(key: string): JSONObject {\n        const value = this._data[key];\n        if (typeof value === 'object' && !(value instanceof JSONObject)) {\n            return new JSONObject(value);\n        }\n        return key in this._data ? value : null;\n    }\n    setFloat(key: string, value: number): this {\n        this._data[key] = value;\n        return this;\n    }\n    setInt(key: string, value: number): this {\n        this._data[key] = value;\n        return this;\n    }\n    setString(key: string, value: string): this {\n        this._data[key] = value;\n        return this;\n    }\n    setBoolean(key: string, value: boolean): this {\n        this._data[key] = value;\n        return this;\n    }\n    setJSONArray(key: string, value: JSONArray): this {\n        this._data[key] = value;\n        return this;\n    }\n    setJSONObject(key: string, value: JSONObject): this {\n        this._data[key] = value;\n        return this;\n    }\n    keys(): string[] {\n        return Object.keys(this._data);\n    }\n    toJSON(key: string): any {\n        return this._data;\n    }\n}\n", "import { minim } from \"./app\";\nimport { AudioPlayer, println } from \"./compat\";\n\nexport class SoundLibrary\n{\n  static kazooTheme: AudioPlayer;\n  \n  static loadSounds(): void\n  {\n    println(\"Sounds loading...\");\n    SoundLibrary.kazooTheme = minim.loadFile(\"data/audio/ow_kazoo_theme.mp3\");\n  }\n}\n\nexport class AudioManager\n{\n  static currentSound: AudioPlayer;\n  \n  constructor()\n  {\n    SoundLibrary.loadSounds();\n  }\n  \n  static play(sound: AudioPlayer): void\n  {\n    AudioManager.currentSound = sound;\n    AudioManager.currentSound.play();\n  }\n  \n  static pause(): void\n  {\n    if (AudioManager.currentSound != null)\n    {\n      AudioManager.currentSound.pause();\n    }\n    else\n    {\n      println(\"Current sound is NULL!!!\");\n    }\n  }\n}", "\nexport enum SectorName {NONE, ROCKY_TWIN, SANDY_TWIN, TIMBER_HEARTH, BRITTLE_HOLLOW, GIANTS_DEEP, DARK_BRAMBLE, COMET, QUANTUM_MOON, EYE_OF_THE_UNIVERSE};\n\nexport enum Frequency {BEACON, QUANTUM, TRAVELER};\n\nexport enum Curiosity {VESSEL, TIME_LOOP_DEVICE, QUANTUM_MOON, ANCIENT_PROBE_LAUNCHER};", "\nexport class Vector2\n{\n  x: number;\n  y: number;\n\n  constructor()\n  constructor(x: number, y: number)\n  constructor(vec: Vector2)\n  constructor(vecOrX?: Vector2 | number, y?: number) {\n    this.x = vecOrX instanceof Vector2 ? vecOrX.x : typeof vecOrX === 'number' ? vecOrX : 0\n    this.y = vecOrX instanceof Vector2 ? vecOrX.y : typeof y === 'number' ? y : 0\n  }\n\n  assign(vec: Vector2): void\n  {\n    this.x = vec.x;\n    this.y = vec.y;\n  }\n  \n  toString(): string{\n    return \"(\" + this.x + \", \" + this.y + \")\";\n  }\n  \n  dist(v: Vector2): number{\n    return v.sub(this).magnitude();\n  }\n  \n  add(v: Vector2): Vector2{\n    return new Vector2(this.x + v.x, this.y + v.y);\n  }\n  \n  sub(v: Vector2): Vector2{\n    return new Vector2(this.x - v.x, this.y - v.y);\n  }\n  \n  mult(value: number): Vector2{\n    return new Vector2(this.x * value, this.y * value);\n  }\n  \n  scale(value: number): Vector2{\n    this.x *= value;\n    this.y *= value;\n    return this;\n  }\n  \n  magnitude(): number{\n    return Math.max(Math.sqrt(this.x*this.x+this.y*this.y), 0.001);\n  }\n  \n  normalize(): Vector2{\n    const mag: number = this.magnitude();\n    this.x /= mag;\n    this.y /= mag;\n    return this;\n  }\n  \n  normalized(): Vector2{\n    const mag: number = this.magnitude();\n    return new Vector2(this.x/mag, this.y/mag);\n  }\n  \n  theta(): number{\n    return Math.atan2(this.y, this.x);\n  }\n  \n  dx(): number{\n    return this.x/this.magnitude();\n  }\n  \n  dy(): number{\n    return this.y/this.magnitude();\n  }\n  \n  leftNormal(): Vector2{\n    return new Vector2(this.y,-this.x);\n  }\n  rightNormal(): Vector2{\n    return new Vector2(-this.y,this.x);\n  }\n  \n  dot(v1: Vector2): number{\n    return(this.x * v1.x + this.y * v1.y);\n  }\n  \n  scaledDot(v1: Vector2): number{\n    return(this.x * v1.dx() + this.y * v1.dy());\n  }\n  \n  projectOnto(v2: Vector2): Vector2{\n    const dot: number = this.scaledDot(v2);\n    return new Vector2(dot * v2.dx(), dot * v2.dy());\n  }\n}", "import { OWNode } from \"./Node\";\nimport { Sector } from \"./Sector\";\nimport { Vector2 } from \"./Vector2\";\n\nexport class Entity\n{\n  position: Vector2;\n  screenPosition: Vector2;\n\n  parent: Entity | null = null;\n  _children: Entity[];\n  \n  constructor()\n  constructor(x: number, y: number)\n  constructor(pos: Vector2)\n  constructor(posOrX?: Vector2 | number, y?: number)\n  {\n    let pos: Vector2 = new Vector2()\n    if (typeof posOrX === 'number' && typeof y === 'number') {\n      pos = new Vector2(posOrX, y)\n    } else if (posOrX instanceof Vector2) {\n      pos = posOrX\n    }\n    this.position = new Vector2();\n    this.screenPosition = new Vector2();\n    this._children = [];\n\n    this.setPosition(pos);\n  }\n\n  setPosition(newPos: Vector2): void\n  setPosition(x: number, y: number): void\n  setPosition(newPosOrX: Vector2 | number, y?: number): void\n  {\n    this.position.x = newPosOrX instanceof Vector2 ? newPosOrX.x : newPosOrX;\n    this.position.y = newPosOrX instanceof Vector2 ? newPosOrX.y : y ?? 0;\n\n    // update child screen positions\n    if (this.parent != null)\n    {\n      this.updateScreenPosition(this.parent.screenPosition);\n    }\n    else \n    {\n      this.updateScreenPosition(new Vector2(0, 0));\n    }\n  }\n\n  updateScreenPosition(parentScreenPos: Vector2): void\n  {\n    this.screenPosition.assign(parentScreenPos.add(this.position));\n\n    for (let i: number = 0; i < this._children.length; i++)\n    {\n      this._children[i].updateScreenPosition(this.screenPosition);\n    }\n  }\n\n  setScreenPosition(newScreenPos: Vector2): void\n  {\n    if (this.parent == null)\n    {\n      this.setPosition(newScreenPos);\n    }\n    else \n    {\n      this.setPosition(newScreenPos.sub(this.parent.screenPosition));\n    }\n  }\n\n  draw(): void\n  {\n    // stub to override\n  }\n\n  render(): void\n  {\n    this.draw();\n  }\n\n  addChild(child: Entity): void\n  {\n    if (!this._children.includes(child))\n    {\n      this._children.push(child);\n      child.parent = this;\n      child.updateScreenPosition(this.screenPosition);\n    }\n  }\n\n  removeChild(child: Entity): void\n  {\n    if (this._children.includes(child)) {\n      this._children.splice(this._children.indexOf(child), 1);\n    }\n    child.parent = null;\n  }\n}\n\nexport class Actor extends Entity\n{\n  currentSector: Sector | null = null;\n  lastSector: Sector | null = null;\n  currentNode: OWNode | null = null;\n\n  static SPEED: number = 10;\n  \n  _moveTowardsTarget: boolean = false;\n  _targetScreenPos: Vector2;\n  _distToTarget: number = 0;\n  _offset: Vector2;\n  \n  constructor()\n  {\n    super(new Vector2(0, 0));\n    this._targetScreenPos = new Vector2();\n    this._offset = new Vector2(0, 0);\n  }\n\n  isDead(): boolean\n  {\n    return false;\n  }\n  \n  update(): void\n  {\n    this._offset.y = 0;\n    \n    if (this.currentNode == null || !this.currentNode.gravity)\n    {\n      this._offset.y = Math.sin(millis() * 0.005) * 5.0;\n    }\n\n    if (this._moveTowardsTarget)\n    {\n      const d: Vector2 = this._targetScreenPos.sub(this.screenPosition);\n      this._distToTarget = d.magnitude();\n      const v: number = Math.min(this._distToTarget, Actor.SPEED);\n      this.setScreenPosition(this.screenPosition.add(d.normalize().mult(v)));\n    }\n  }\n  \n  draw(): void\n  {\n    fill(0, 0, 100);\n    ellipse(this.screenPosition.x, this.screenPosition.y, 10, 10);\n  }\n\n  setNode(node: OWNode): void\n  {\n    this.currentNode = node;\n    this._targetScreenPos.assign(node.screenPosition);\n    this.setScreenPosition(node.screenPosition);\n  }\n\n  moveToScreenPosition(screenPos: Vector2): void\n  {\n    this._targetScreenPos.assign(screenPos);\n    this._moveTowardsTarget = true;\n  }\n  \n  moveToNode(node: OWNode): void\n  {\n    this.currentNode = node;\n    this._targetScreenPos.assign(node.screenPosition);\n    this._moveTowardsTarget = true;\n  }\n}\n\nexport class Player extends Actor\n{\n  setNode(node: OWNode): void\n  {\n    super.setNode(node);\n    node.visit();\n  }\n\n  moveToNode(node: OWNode): void\n  {\n    super.moveToNode(node);\n    node.visit();\n  }\n\n  update(): void\n  {\n    super.update();\n    //println(this._targetScreenPos);\n  }\n  \n  draw(): void\n  {\n    this.drawAt(this.screenPosition.x, this.screenPosition.y + this._offset.y, 1);\n  }\n\n  drawAt(xPos: number, yPos: number, s: number): void\n  {\n    stroke(30, 100, 100);\n    fill(0, 0, 0);\n\n    push();\n      translate(xPos, yPos);\n      scale(s);\n      ellipse(0, 0, 10, 20);\n    pop();\n  }\n}\n\nexport class Ship extends Actor\n{\n  _player: Actor;\n\n  constructor(player: Actor)\n  {\n    super();\n    this._player = player;\n  }\n\n  update(): void\n  {\n    super.update();\n  }\n\n  draw(): void\n  {\n    this.drawAt(this.screenPosition.x, this.screenPosition.y + this._offset.y, 1, false);\n  }\n\n  drawAt(xPos: number, yPos: number, s: number, skipFill: boolean): void\n  {\n    stroke(30, 100, 100);\n    fill(0, 0, 0);\n\n    if (this._player.currentNode == this.currentNode && !skipFill) \n    {\n      fill(30,100,100);\n    }\n    \n    push();\n      translate(xPos, yPos);\n      scale(s);\n      triangle(-20, 15, 20, 15, 0, -20);\n    pop();\n  }\n}\n\nexport class Probe extends Actor\n{\n  isDead(): boolean\n  {\n    return this._distToTarget < 0.1;\n  }\n\n  update(): void\n  {\n    super.update();\n  }\n\n  draw(): void\n  {\n    noStroke();\n    fill(30, 100, 100);\n    \n    push();\n      translate(this.screenPosition.x, this.screenPosition.y);\n      ellipse(0, 0, 10, 10);\n    pop();\n  }\n}", "import { Color } from \"p5\";\nimport { Entity } from \"./Entity\";\nimport { Vector2 } from \"./Vector2\";\nimport { smallFontData } from \"./app\";\n\nexport interface ButtonObserver\n{\n  onButtonUp(button: Button): void;\n  onButtonEnterHover(button: Button): void;\n  onButtonExitHover(button: Button): void;\n}\n\nexport class Button extends Entity\n{\n  id: string;\n  hoverState: boolean = false;\n  visible: boolean = true;\n  enabled: boolean = true;\n  \n  _bounds: Vector2;  \n  _observer: ButtonObserver;\n    \n  _buttonDown: boolean = false;\n  _wasMousePressed: boolean = false;\n\n  _buttonColor: Color = color(0, 0, 100);\n  _hasDisabledPrompt: boolean = false;\n  _disabledPrompt: string;\n  \n  constructor(buttonID: string, x: number = 0, y: number = 0, w: number = 150, h: number = 50)\n  {\n    super(new Vector2(x, y));\n    this.id = this._disabledPrompt = buttonID;\n    this._bounds = new Vector2(w, h);\n  }\n\n  setColor(newColor: Color): void {this._buttonColor = newColor;}\n  setDisabledPrompt(prompt: string): void \n  {\n    this._disabledPrompt = prompt;\n    this._hasDisabledPrompt = true;\n  }\n\n  getWidth(): number\n  {\n    return this._bounds.x;\n  }\n  \n  setObserver(observer: ButtonObserver): void\n  {\n    this._observer = observer;\n  }\n  \n  update(): void\n  {\n    if (!this.enabled) \n    {\n      this._buttonDown = false;\n      this.hoverState = false;\n      return;\n    }\n    \n    if (this.isPointInBounds(mouseX, mouseY))\n    {\n      if (!this.hoverState)\n      {\n        this.hoverState = true;\n        this.onButtonEnterHover();\n        this._observer.onButtonEnterHover(this);\n      }\n      \n      if (!this._wasMousePressed && this.mousePressed())\n      {\n        this._buttonDown = true;\n      }\n      // fire event on release\n      if (this._buttonDown && !this.mousePressed())\n      {\n        this._buttonDown = false;\n        this.onButtonUp();\n        this._observer.onButtonUp(this);\n      }\n    }\n    else\n    {\n      this._buttonDown = false;\n      \n      if (this.hoverState)\n      {\n        this.hoverState = false;\n        this.onButtonExitHover();\n        this._observer.onButtonExitHover(this);\n      }\n    }\n    \n    this._wasMousePressed = this.mousePressed();\n  }\n\n  onButtonExitHover(): void{}\n  onButtonEnterHover(): void{}\n  onButtonUp(): void{}\n\n  mousePressed(): boolean\n  {\n    return mouseIsPressed;// && mouseButton == LEFT;\n  }\n  \n  draw(): void\n  {\n    if (!this.visible) {return;}\n\n    let alpha: number = 100;\n\n    if (!this.enabled) alpha = 25;\n    \n    stroke(hue(this._buttonColor), saturation(this._buttonColor), brightness(this._buttonColor), alpha);\n    fill(0, 0, 0);\n    \n    if (this.hoverState)\n    {\n      if (this._buttonDown)\n      {\n        stroke(0, 100, 100);\n      }\n      else\n      {\n        stroke(200, 100, 100);\n      }\n    }\n\n    this.drawShape();\n    this.drawText(alpha);\n  }\n\n  drawShape(): void\n  {\n    rectMode(CENTER);\n    rect(this.screenPosition.x, this.screenPosition.y, this._bounds.x, this._bounds.y);\n  }\n\n  drawText(alpha: number): void\n  {\n    fill(0, 0, 100, alpha);\n    textSize(14);\n    textFont(smallFontData);\n    textAlign(CENTER, CENTER);\n\n    if (this.enabled) \n    {\n      text(this.id, this.screenPosition.x, this.screenPosition.y);\n    }\n    else\n    {\n      text(this._disabledPrompt, this.screenPosition.x, this.screenPosition.y);\n    }\n  }\n  \n  isPointInBounds(x: number, y: number): boolean\n  {\n    if (x > this.screenPosition.x - this._bounds.x * 0.5 && x < this.screenPosition.x + this._bounds.x * 0.5)\n    {\n      if (y > this.screenPosition.y - this._bounds.y * 0.5 && y < this.screenPosition.y + this._bounds.y * 0.5)\n      {\n        return true;\n      }\n    }\n    return false;\n  }\n}", "import { Color } from \"p5\";\nimport { ButtonObserver, Button } from \"./Button\";\nimport { Entity } from \"./Entity\";\nimport { Vector2 } from \"./Vector2\";\nimport { playerData } from \"./app\";\n\nexport abstract class OWScreen implements ButtonObserver\n{\n  active: boolean = false;\n  overlay: boolean = false;\n\n  _buttons: Button[];\n  _toolbarButtons: Button[];\n  _starPositions: Vector2[];\n\n  _toolbarRoot: Entity;\n  \n  constructor()\n  {\n    this._buttons = new Array<Button>();\n    this._toolbarButtons = new Array<Button>();\n    this._starPositions = new Array<Vector2>(1000);\n    \n    for (let i: number = 0; i < this._starPositions.length; i++)\n    {\n      this._starPositions[i] = new Vector2(random(0, width), random(90, height - 90));\n    }\n\n    this._toolbarRoot = new Entity(width/2, height - 50);\n  }\n  \n  addButton(button: Button): void\n  {\n    this._buttons.push(button);\n    button.setObserver(this);\n  }\n  \n  removeButton(button: Button): void\n  {\n    if (this._buttons.includes(button)) {\n      this._buttons.splice(this._buttons.indexOf(button), 1);\n    }\n  }\n\n  addButtonToToolbar(button: Button): void\n  {\n    this.addButton(button);\n    this._toolbarButtons.push(button);\n    this._toolbarRoot.addChild(button);\n    this.updateToolbarPositions();\n  }\n\n  removeButtonFromToolbar(button: Button): void\n  {\n    this.removeButton(button);\n    this._toolbarButtons.splice(this._toolbarButtons.indexOf(button), 1);\n    this._toolbarRoot.removeChild(button);\n    this.updateToolbarPositions();\n  }\n\n  updateToolbarPositions(): void\n  {\n    const margins: number = 10;\n    let toolbarWidth: number = -margins;\n\n    for (let i: number = 0; i < this._toolbarButtons.length; i++)\n    {\n      toolbarWidth += margins;\n      toolbarWidth += this._toolbarButtons[i].getWidth();\n    }\n\n    let xPos: number = -(toolbarWidth * 0.5);\n\n    for (let i: number = 0; i < this._toolbarButtons.length; i++)\n    {\n      const buttonHalfWidth: number = this._toolbarButtons[i].getWidth() * 0.5;\n      xPos += buttonHalfWidth;\n      this._toolbarButtons[i].setPosition(xPos, 0);\n      xPos += buttonHalfWidth + margins;\n    }\n  }\n  \n  abstract update(): void;\n  abstract render(): void;\n  \n  onEnter(): void{}\n  onExit(): void{}\n  \n  onButtonUp(button: Button): void{}\n  onButtonEnterHover(button: Button): void{}\n  onButtonExitHover(button: Button): void{}\n  \n  updateInput(): void\n  {\n    for (let i: number = 0; i < this._buttons.length; i++)\n    {\n      this._buttons[i].update();\n    }\n  }\n  \n  renderBackground(): void\n  {\n    let bgColor: Color = color(0, 0, 0);\n    let starColor: Color = color(0, 0, 100);\n\n    // superhack to invert colors when player is at EYE_OF_THE_UNIVERSE\n    if (playerData.isPlayerAtEOTU())\n    {\n      bgColor = color(0, 0, 100);\n      starColor = color(0, 0, 0);\n    }\n\n    background(bgColor);\n    noStroke();\n    \n    /** DRAW STARFIELD **/\n    for (let j: number = 0; j < this._starPositions.length; j++)\n    {\n      fill(starColor);\n      rectMode(CENTER);\n      rect(this._starPositions[j].x, this._starPositions[j].y, 2, 2);\n    }\n  }\n  \n  renderButtons(): void\n  {\n    // only render buttons if the screen is active\n    if (this.active)\n    {\n      for (let i: number = 0; i < this._buttons.length; i++)\n      {\n        this._buttons[i].render();\n      }\n    }\n  }\n}", "export class Translator {\n  private static instance: Translator;\n  private cache: Map<string, string> = new Map();\n\n  private constructor() {}\n\n  public static getInstance(): Translator {\n    if (!Translator.instance) {\n      Translator.instance = new Translator();\n    }\n    return Translator.instance;\n  }\n\n  public async translate(text: string): Promise<string> {\n    // \u68C0\u67E5\u7F13\u5B58\n    const cached = this.cache.get(text);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const response = await fetch('https://api-edge.cognitive.microsofttranslator.com/translate?api-version=3.0&from=en&to=zh-Hans', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${await this.getToken()}`,\n        },\n        body: JSON.stringify([{\n          text: text\n        }])\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      const translation = result[0].translations[0].text;\n      console.log('\u539F\u6587:', text);\n      console.log('\u8BD1\u6587:', translation);\n      \n      // \u5B58\u5165\u7F13\u5B58\n      this.cache.set(text, translation);\n      \n      return translation;\n    } catch (error) {\n      console.error('\u7FFB\u8BD1\u5931\u8D25:', error);\n      return '\u7FFB\u8BD1\u5931\u8D25';\n    }\n  }\n\n  private async getToken(): Promise<string> {\n    try {\n      const tokenResponse = await fetch('https://edge.microsoft.com/translate/auth');\n      if (!tokenResponse.ok) {\n        throw new Error('\u83B7\u53D6 token \u5931\u8D25');\n      }\n      return await tokenResponse.text();\n    } catch (error) {\n      console.error('\u83B7\u53D6 token \u5931\u8D25:', error);\n      throw error;\n    }\n  }\n} ", "import { Color } from \"p5\";\nimport { Button } from \"./Button\";\nimport { Entity } from \"./Entity\";\nimport { Curiosity } from \"./Enums\";\nimport { Clue } from \"./PlayerData\";\nimport { OWScreen } from \"./Screen\";\nimport { playerData, feed, gameManager, mediumFontData } from \"./app\";\nimport { Translator } from \"./Translator\";\n\nexport interface DatabaseObserver\n{\n  onInvokeClue(clue: Clue): void;\n}\n\nexport class DatabaseScreen extends OWScreen implements ClueButtonObserver\n{\n  _clueRoot: Entity;\n  _activeClue: Clue;\n  _observer: DatabaseObserver;\n\n  constructor()\n  {\n    super();\n    this.addButtonToToolbar(new Button(\"Close Database\",  0, 0, 150, 50));\n    this._clueRoot = new Entity(100, 140);\n\n    // create clue buttons using PlayerData's list of clues\n    for (let i: number = 0; i < playerData.getClueCount(); i++)\n    {\n      const clueButton: ClueButton = new ClueButton(playerData.getClueAt(i), i * 40, this);\n      this.addButton(clueButton);\n      this._clueRoot.addChild(clueButton);\n    }\n  }\n\n  setObserver(observer: DatabaseObserver): void\n  {\n    this._observer = observer;\n  }\n\n  onEnter(): void\n  {\n  }\n\n  onExit(): void\n  {\n    this._observer = null;\n  }\n\n  onClueMouseOver(clue: Clue): void\n  {\n    this._activeClue = clue;\n  }\n\n  onClueSelected(clue: Clue): void\n  {\n    if (this._observer != null)\n    {\n      this._observer.onInvokeClue(clue);\n    }\n    else\n    {\n      feed.publish(\"that doesn't help you right now\", true);\n    }\n  }\n\n  onButtonUp(button: Button): void\n  {\n    if (button.id == \"Close Database\")\n    {\n      gameManager.popScreen();\n    }\n  }\n\n  update(): void {}\n\n  async render(): Promise<void>\n  {\n    fill(0, 0, 0);\n    stroke(0, 0, 100);\n\n    rectMode(CORNER);\n\n    const x: number = width/2 - 100;\n    const y: number = 200;\n    const w: number = 500;\n    const h: number = 300;\n\n    rect(x, y, w, h);\n\n    let _displayText: string = \"Select An Entry\";\n\n    if (this._activeClue != null)\n    {\n      _displayText = this._activeClue.description;\n    }\n    else if (playerData.getKnownClueCount() == 0)\n    {\n      _displayText = \"No Entries Yet\";\n    }\n\n    textFont(mediumFontData);\n    textSize(18);\n    textAlign(LEFT, TOP);\n    fill(0, 0, 100);\n    // text(_displayText, x + 10, y + 10, w - 20, h - 20);\n    textFont('SimSun');\n    const displayText = this._activeClue.description;\n    const translatedText = await Translator.getInstance().translate(displayText);\n    const finalText = displayText + \"\\n[\u8BD1: \" + translatedText + \"]\";\n    text(finalText, x + 10, y + 10, w - 20, h - 20);\n\n    feed.render();\n  }\n}\n\nexport interface ClueButtonObserver\n{\n  onClueSelected(clue: Clue): void;\n  onClueMouseOver(clue: Clue): void;\n}\n\nexport class ClueButton extends Button\n{\n  _clue: Clue;\n  _clueObserver: ClueButtonObserver;\n\n  constructor(clue: Clue, y: number, observer: ClueButtonObserver)\n  {\n    super(clue.name, (textWidth(clue.name) + 10) * 0.5, y, textWidth(clue.name) + 10, 20);\n    this._clue = clue;\n    this._clueObserver = observer;\n  }\n\n  getClue(): Clue\n  {\n    return this._clue;\n  }\n\n  update(): void\n  {\n    this.enabled = this._clue.discovered;\n    this.visible = this._clue.discovered;\n    super.update();\n  }\n\n  draw(): void\n  {\n    if (!this.visible) {return;}\n    \n    super.draw();\n\n    let symbolColor: Color;\n\n    if (this._clue.curiosity == Curiosity.VESSEL)\n    {\n        symbolColor = color(100, 100, 100);\n    }\n    else if (this._clue.curiosity == Curiosity.ANCIENT_PROBE_LAUNCHER)\n    {\n      symbolColor = color(200, 100, 100);\n    }\n    else if (this._clue.curiosity == Curiosity.TIME_LOOP_DEVICE)\n    {\n      symbolColor = color(20, 100, 100);\n    }\n    else\n    {\n      symbolColor = color(300, 100, 100);\n    }\n\n    fill(symbolColor);\n    noStroke();\n    ellipse(this.screenPosition.x - this._bounds.x * 0.5 - 20, this.screenPosition.y, 10, 10);\n\n    noFill();\n    stroke(symbolColor);\n    ellipse(this.screenPosition.x - this._bounds.x * 0.5 - 20, this.screenPosition.y, 15, 15);\n  }\n\n  onButtonEnterHover(): void\n  {\n    this._clueObserver.onClueMouseOver(this._clue);\n  }\n\n  onButtonUp(): void\n  {\n    this._clueObserver.onClueSelected(this._clue);\n  }\n}", "\nexport interface GlobalObserver\n{\n\tonReceiveGlobalMessage(message: Message): void;\n}\n\nexport class GlobalMessenger\n{\n\t_observers: GlobalObserver[];\n\n\tconstructor()\n\t{\n\t\tthis._observers = new Array<GlobalObserver>();\n\t}\n\n\taddObserver(observer: GlobalObserver): void\n\t{\n\t\tif (!this._observers.includes(observer))\n\t\t{\n\t\t\tthis._observers.push(observer);\n\t\t}\n\t\t//println(\"Observer Count:\", this._observers.length);\n\t}\n\n\tremoveObserver(observer: GlobalObserver): void\n\t{\n\t\tthis._observers.splice(this._observers.indexOf(observer), 1);\n\t}\n\n\tremoveAllObservers(): void\n\t{\n\t\tthis._observers.length = 0;\n\t}\n\n\tsendMessage(messageID: string): void\n\tsendMessage(message: Message): void\n\tsendMessage(messageOrID: string | Message): void\n\t{\n\t\tconst message = messageOrID instanceof Message ? messageOrID : new Message(messageOrID);\n\t\tfor (let i: number = 0; i < this._observers.length; i++)\n\t\t{\n\t\t\tthis._observers[i].onReceiveGlobalMessage(message);\n\t\t}\n\t}\n}\n\nexport class Message\n{\n\tid: string;\n\ttext: string;\n\n\tconstructor(messageID: string, t?: string)\n\t{\n\t\tthis.id = messageID;\n\t\tif (t !== undefined) this.text = t;\n\t}\n}", "import { Frequency, Curiosity } from \"./Enums\";\nimport { GameSave } from \"./GameSave\";\nimport { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { START_WITH_LAUNCH_CODES, START_WITH_COORDINATES, START_WITH_SIGNALS, messenger, feed, locator, gameManager, START_WITH_CLUES, frequencyToString } from \"./app\";\n\nexport class PlayerData implements GlobalObserver\n{\n\t_knowsLaunchCodes: boolean;\n\t_knowsSignalCoordinates: boolean;\n\n\t_clueList: Clue[];\n\t_knownFrequencies: Frequency[];\n\n\t_knownClueCount: number = 0;\n\n\t// resets every loop\n\t_isDead: boolean = false;\n\n\tconstructor()\n\t{\n\t\tthis._knowsLaunchCodes = START_WITH_LAUNCH_CODES;\n\t\tthis._knowsSignalCoordinates = START_WITH_COORDINATES;\n\n\t\tthis._clueList = new Array<Clue>();\n\t\tthis._knownFrequencies = new Array<Frequency>();\n\t\tthis._knownFrequencies.push(Frequency.TRAVELER);\n\n\t\tif (START_WITH_SIGNALS)\n\t\t{ \n\t\t\tthis._knownFrequencies.push(Frequency.BEACON);\n\t\t\tthis._knownFrequencies.push(Frequency.QUANTUM);\n\t\t}\n\n\t\tthis._clueList.push(new Clue(Curiosity.ANCIENT_PROBE_LAUNCHER, \"APL_1\", \"Sunken Module\", \"The data-collection module broke off from the Nomai probe launcher and fell into the center of Giant's Deep.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.ANCIENT_PROBE_LAUNCHER, \"APL_2\", \"Rogue Tornadoes\", \"While most tornadoes on Giant's Deep have upward-moving winds, the tornadoes that rotate counterclockwise have strong downward winds.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.ANCIENT_PROBE_LAUNCHER, \"APL_3\", \"Jellyfish\", \"The jellyfish on Giant's Deep have a hollow body cavity just big enough to fit a person.\"));\n\n\t\tthis._clueList.push(new Clue(Curiosity.QUANTUM_MOON, \"QM_3\", \"The 5th Location\", \"The Quantum Moon sometimes visits a 5th location outside the Solar System.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.QUANTUM_MOON, \"QM_1\", \"Quantum Snapshot\", \"Observing an image of a quantum object prevents it from moving just as effectively as directly observing the object itself.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.QUANTUM_MOON, \"QM_2\", \"Quantum Entanglement\", \"Ordinary objects in close proximity to a quantum object can become 'entangled' with it and begin to exhibit quantum attributes.\\n\\nEven lifeforms can become entangled so long as they are unable to observe themselves or their surroundings.\"));\n\n\t\tthis._clueList.push(new Clue(Curiosity.VESSEL, \"D_1\", \"Lost Vessel\", \"The Nomai came to this Solar System in search of a mysterious signal they refer to as 'The Eye of the Universe'. The interstellar Vessel they traveled in is shipwrecked somewhere in Dark Bramble.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.VESSEL, \"D_2\", \"Children's Game\", \"Nomai children played a game that reenacted their people's escape from Dark Bramble. According to the rules, three players (the escape pods) had to sneak past a blindfolded player (the anglerfish) without being heard.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.VESSEL, \"D_3\", \"Tracking Device\", \"The Nomai Vessel crashed in the roots of Dark Bramble. The Nomai attempted to relocate the roots by inserting a tracking device into one of Dark Bramble's vines, but they were unable to penetrate the vine's tough exterior.\"));\n\n\t\tthis._clueList.push(new Clue(Curiosity.TIME_LOOP_DEVICE, \"TLD_1\", \"Time Machine\", \"After Nomai researchers created a small-but-functional time loop device on Giant's Deep, they made plans to construct a full-sized version on the Sandy Hourglass Twin (provided they could generate enough energy to power it).\"));\n\t\tthis._clueList.push(new Clue(Curiosity.TIME_LOOP_DEVICE, \"TLD_2\", \"Warp Towers\", \"The Nomai created special towers that can warp anyone inside to a corresponding receiver platform. The towers only activate when you can see your destination through a slit in the top of the tower.\"));\n\t\tthis._clueList.push(new Clue(Curiosity.TIME_LOOP_DEVICE, \"TLD_3\", \"Construction Project\", \"The Nomai excavated the Sandy Hourglass Twin to construct an enormous machine designed to harness the energy from a supernova.\\n\\nThe control center is located inside a hollow cavity at the center of the planet, but it is completely sealed off from the surface.\\n\\n\"));\n\t}\n\n\tinit(): void\n\t{\n\t\tmessenger.addObserver(this);\n\t\tthis._isDead = false;\n\t}\n\n\tonReceiveGlobalMessage(message: Message): void\n\t{\n\t\tif (message.id === \"learn launch codes\" && !this._knowsLaunchCodes)\n\t\t{\n\t\t\tthis._knowsLaunchCodes = true;\n\t\t\tfeed.publish(\"learned launch codes\", true);\n\t\t\tmessenger.sendMessage(\"spawn ship\");\n\t\t}\n\t\telse if (message.id === \"learn signal coordinates\" && !this._knowsSignalCoordinates)\n\t\t{\n\t\t\tthis._knowsSignalCoordinates = true;\n\t\t\tfeed.publish(\"learned signal coordinates\", true);\n\t\t}\n\n\t\tGameSave.saveData(this);\n\t}\n\n\tkillPlayer(): void\n\t{\n\t\tthis._isDead = true;\n\n\t\tGameSave.saveData(this);\n\t}\n\n\tisPlayerDead(): boolean\n\t{\n\t\treturn this._isDead;\n\t}\n\n\tisPlayerAtEOTU(): boolean\n\t{\n\t\treturn ((locator.player.currentSector == gameManager._solarSystem.quantumMoon && locator.getQuantumMoonLocation() == 4) || locator.player.currentSector == gameManager._solarSystem.eyeOfTheUniverse);\n\t}\n\n\tknowsFrequency(frequency: Frequency): boolean\n\t{\n\t\treturn this._knownFrequencies.includes(frequency);\n\t}\n\n\tknowsSignalCoordinates(): boolean\n\t{\n\t\treturn this._knowsSignalCoordinates;\n\t}\n\n\tlearnFrequency(frequency: Frequency): void\n\t{\n\t\tif (!this.knowsFrequency(frequency))\n\t\t{\n\t\t\tthis._knownFrequencies.push(frequency);\n\t\t\tfeed.publish(\"frequency identified: \" + frequencyToString(frequency), true);\n\t\t}\n\n\t\tGameSave.saveData(this);\n\t}\n\n\tgetFrequencyCount(): number\n\t{\n\t\treturn this._knownFrequencies.length;\n\t}\n\n\tknowsLaunchCodes(): boolean\n\t{\n\t\treturn this._knowsLaunchCodes;\n\t}\n\n\tgetClueAt(i: number): Clue\n\t{\n\t\treturn this._clueList[i];\n\t}\n\n\tgetClueCount(): number\n\t{\n\t\treturn this._clueList.length;\n\t}\n\n\tgetKnownClueCount(): number\n\t{\n\t\treturn this._knownClueCount;\n\t}\n\n\tdiscoverClue(id: string): void\n\t{\n\t\tfor (let i: number = 0; i < this._clueList.length; i++)\n\t\t{\n\t\t\tif (this._clueList[i].id === id && !this._clueList[i].discovered)\n\t\t\t{\n\t\t\t\tthis._clueList[i].discovered = true;\n\t\t\t\tthis._knownClueCount++;\n\t\t\t\tfeed.publish(\"information added to database\", true);\n\t\t\t}\n\t\t}\n\n\t\tGameSave.saveData(this);\n\t}\n}\n\nexport class Clue\n{\n\tid: string;\n\tname: string;\n\tdescription: string;\n\tdiscovered: boolean;\n\tinvoked: boolean = false;\n\tcuriosity: Curiosity;\n\n\tconstructor(curiosity: Curiosity, id: string, name: string, description: string)\n\t{\n\t\tthis.curiosity = curiosity;\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.discovered = false || START_WITH_CLUES;\n\t}\n}\n", "import { PlayerData } from \"./PlayerData\";\n\nexport class GameSave {\n  static PLAYER_DATA = \"playerData\";\n\n  static saveData(data: PlayerData) {\n    localStorage.setItem(this.PLAYER_DATA, JSON.stringify(data));\n  }\n\n  static loadData(): PlayerData {\n    const playerData = new PlayerData();\n    if (!this.hasData()) {\n      return playerData;\n    }\n\n    const playerDataSave = JSON.parse(localStorage.getItem(this.PLAYER_DATA));\n    Object.assign(playerData, playerDataSave);\n    return playerData;\n  }\n\n  static clearData() {\n    localStorage.removeItem(this.PLAYER_DATA);\n  }\n\n  static hasData(): boolean {\n    return Boolean(localStorage.getItem(this.PLAYER_DATA));\n  }\n}\n", "import { AudioManager, SoundLibrary } from \"./AudioManager\";\nimport { Button } from \"./Button\";\nimport { SectorName } from \"./Enums\";\nimport { GameSave } from \"./GameSave\";\nimport { OWScreen } from \"./Screen\";\nimport { SKIP_TITLE, gameManager } from \"./app\";\nimport { exit } from \"./compat\";\n\nexport class TitleScreen extends OWScreen\n{\n  constructor()\n  {\n    super();\n    \n    if (GameSave.hasData()) {\n      this.addTitleButton(\"Continue\", 110);\n      this.addTitleButton(\"Reset Progress\", -110);\n    } else {\n      this.addTitleButton(\"New Game\", 0);\n    }\n  }\n\n  addTitleButton(text: string, xOffset: number) {\n    this.addButton(new Button(text, width/2 + xOffset, height - 50, 200, 50));\n  }\n  \n  onEnter(): void\n  {\n    if (SKIP_TITLE)\n    {\n      gameManager.loadSector(SectorName.TIMBER_HEARTH);\n      return;\n    }\n    \n    AudioManager.play(SoundLibrary.kazooTheme);\n  }\n  \n  onExit(): void\n  {\n    AudioManager.pause();\n  }\n  \n  update(): void\n  {\n  }\n  \n  render(): void\n  {\n    fill(142, 90, 90);\n    textAlign(CENTER, CENTER);\n    textSize(100);\n    text(\"Outer Wilds\", width/2, height/2 - 50);\n    \n    fill(0, 0, 100);\n    textSize(22);\n    text(\"a thrilling graphical text adventure\", width/2, height/2 + 50);\n  }\n  \n  onButtonUp(button: Button): void\n  {\n    if (button.id == \"New Game\" || button.id == \"Continue\")\n    {\n      gameManager.loadSector(SectorName.TIMBER_HEARTH);\n    }\n    else if (button.id == \"Reset Progress\")\n    {\n      GameSave.clearData();\n      exit();\n    }\n  }\n}\n\nexport class EndScreen extends OWScreen\n{\n  constructor()\n  {\n    super();\n    this.addButton(new Button(\"Exit\", width/2, height - 50, 200, 50));\n  }\n  \n  onEnter(): void\n  {\n    AudioManager.play(SoundLibrary.kazooTheme);\n  }\n  \n  onExit(): void\n  {\n    AudioManager.pause();\n  }\n  \n  update(): void\n  {\n  }\n  \n  render(): void\n  {\n    fill(142, 90, 90);\n    textAlign(CENTER, CENTER);\n    textSize(100);\n    text(\"Outer Wilds\", width/2, height/2 - 50);\n    \n    fill(0, 0, 100);\n    textSize(22);\n    text(\"thanks for playing!\", width/2, height/2 + 50);\n  }\n  \n  onButtonUp(button: Button): void\n  {\n    if (button.id == \"Exit\")\n    {\n      exit();\n    }\n  }\n}\n", "import { Button } from \"./Button\";\nimport { DatabaseObserver } from \"./DatabaseScreen\";\nimport { Message } from \"./GlobalMessenger\";\nimport { Clue } from \"./PlayerData\";\nimport { OWScreen } from \"./Screen\";\nimport { EndScreen } from \"./TitleScreen\";\nimport { feed, timeLoop, gameManager, playerData, messenger, locator, mediumFontData } from \"./app\";\nimport { Translator } from \"./Translator\";\n\nexport abstract class EventScreen extends OWScreen implements DatabaseObserver\n{\n\tstatic BOX_WIDTH: number = 700;\n\tstatic BOX_HEIGHT: number = 400;\n\n\t_nextButton: Button;\n\t_databaseButton: Button;\n\n\tconstructor()\n\t{\n\t\tsuper()\n\t\tthis.overlay = true; // continue to render BG\n\t\tthis.initButtons();\n\t}\n\n\tinitButtons(): void\n\t{\n\t\tthis.addButtonToToolbar(this._nextButton = new Button(\"Continue\", 0, 0, 150, 50));\n\t}\n\n\taddDatabaseButton(): void\n\t{\n\t\tthis.addButtonToToolbar(this._databaseButton = new Button(\"Use Database\", 0, 0, 150, 50));\n\t}\n\n\taddContinueButton(): void\n\t{\n\t\tthis.addButtonToToolbar(this._nextButton = new Button(\"Continue\", 0, 0, 150, 50));\n\t}\n\n\tupdate(): void{}\n\n\trenderBackground(): void {}\n\n\tasync render(): Promise<void>\n\t{\n\t\tpush();\n\t\ttranslate(width/2 - EventScreen.BOX_WIDTH/2, height/2 - EventScreen.BOX_HEIGHT/2);\n\n\t\t\tstroke(0, 0, 100);\n\t\t\tfill(0, 0, 0);\n\t\t\trectMode(CORNER);\n\t\t\trect(0, 0, EventScreen.BOX_WIDTH, EventScreen.BOX_HEIGHT);\n\n\t\t\tfill(0, 0, 100);\n\n\t\t    textFont(mediumFontData);\n\t\t    textSize(18);\n\t\t\ttextAlign(LEFT, TOP);\n\t\t\t// text(this.getDisplayText(), 10, 10, EventScreen.BOX_WIDTH - 20, EventScreen.BOX_HEIGHT - 20);\n\t\t\ttextFont('SimSun');\n\t\t\tconst displayText = this.getDisplayText();\n\t\t\tconst translatedText = await Translator.getInstance().translate(displayText);\n\t\t\tconst finalText = displayText + \"\\n[\u8BD1: \" + translatedText + \"]\";\n\t\t\ttext(finalText, 10, 10, EventScreen.BOX_WIDTH - 20, EventScreen.BOX_HEIGHT - 20);\n\n\n\t\tpop();\n\n\t\tfeed.render();\n\t\ttimeLoop.renderTimer();\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t    if (button == this._nextButton)\n\t    {\n\t    \tthis.onContinue();\n\t    }\n\t    else if (button == this._databaseButton)\n\t    {\n\t\t\tgameManager.pushScreen(gameManager.databaseScreen);\n\t\t\tgameManager.databaseScreen.setObserver(this);\n\t    }\n\t}\n\n\tonInvokeClue(clue: Clue): void {}\n\n\tabstract getDisplayText(): string;\n\n\tabstract onContinue(): void;\n\n\tonEnter(): void{}\n\n\tonExit(): void{}\n}\n\nexport class DeathByAnglerfishScreen extends EventScreen\n{\n\tonEnter(): void\n\t{\n\t\tfeed.clear();\n\t\tfeed.publish(\"you are eaten by an anglerfish\", true);\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn \"As you fly towards the shining light, you realize it's actually the lure of a huge anglerfish!\\n\\nYou try to turn around, but it's too late - the anglerfish devours you in a single bite.\\n\\nThe world goes black...\";\n\t}\n\n\tonContinue(): void\n\t{\n\t\tplayerData.killPlayer();\n\t}\n}\n\nexport class DiveAttemptScreen extends EventScreen\n{\n\tonEnter(): void\n\t{\n\t\tfeed.clear();\n\t\tfeed.publish(\"you try to dive underwater\", true);\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn \"You try to dive underwater, but a strong surface current prevents you from submerging more than a few hundred meters.\";\n\t}\n\n\tonContinue(): void\n\t{\n\t\tgameManager.popScreen();\n\t}\n}\n\nexport class TeleportScreen extends EventScreen\n{\n\t_text: string;\n\t_destination: string;\n\n\tconstructor(teleportText: string, destination: string)\n\t{\n\t\tsuper()\n\t\tthis._text = teleportText;\n\t\tthis._destination = destination;\n\t}\n\n\tonExit(): void\n\t{\n\t\tfeed.clear();\n\t\tfeed.publish(\"you are teleported to a new location\", true);\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn this._text;\n\t}\n\n\tonContinue(): void\n\t{\n\t\tgameManager.popScreen();\n\t\tmessenger.sendMessage(new Message(\"teleport to\", this._destination));\n\t}\n}\n\nexport class MoveToScreen extends EventScreen\n{\n\t_text: string;\n\t_destination: string;\n\n\tconstructor(moveText: string, destination: string)\n\t{\n\t\tsuper()\n\t\tthis._text = moveText;\n\t\tthis._destination = destination;\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn this._text;\n\t}\n\n\tonContinue(): void\n\t{\n\t\tgameManager.popScreen();\n\t\tmessenger.sendMessage(new Message(\"move to\", this._destination));\n\t}\n}\n\nexport class SectorArrivalScreen extends EventScreen\n{\n\t_arrivalText: string;\n\t_sectorName: string;\n\n\tconstructor(arrivalText: string, sectorName: string)\n\t{\n\t\tsuper()\n\t\tthis._arrivalText = arrivalText;\n\t\tthis._sectorName = sectorName;\n\t}\n\n\tonEnter(): void\n\t{\n\t\tfeed.clear();\n\t\tfeed.publish(\"you arrive at \" + this._sectorName);\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn this._arrivalText;\n\t}\n\n\tonContinue(): void\n\t{\n\t\tgameManager.popScreen();\n\t}\n}\n\nexport class QuantumArrivalScreen extends EventScreen\n{\n\t_screenIndex: number = 0;\n\t_photoTaken: boolean = false;\n\n\tinitButtons(): void\n\t{\n\t\tthis.addDatabaseButton();\n\t\tthis.addContinueButton();\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\tif (this._screenIndex == 0)\n\t\t{\n\t\t\tif (!this._photoTaken)\n\t\t\t{\n\t\t\t\treturn \"As you approach the Quantum Moon, a strange mist starts to obscure your vision...\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn \"You use your probe to take a snapshot of the moon mere moments before it's utterly obscured by the encroaching mist.\";\n\t\t\t}\n\t\t}\n\t\telse if (this._screenIndex == 1)\n\t\t{\n\t\t\tif (!this._photoTaken)\n\t\t\t{\n\t\t\t\treturn \"The mist completely engulfs your ship, then dissipates as suddenly as it appeared.\\n\\nYou scan your surroundings, but the Quantum Moon has mysteriously vanished.\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn \"You plunge into the mist, making sure to keep an eye on the photo you took just moments before.\\n\\nSuddenly a huge shape materializes out of the mist...you've made it to the surface of the Quantum Moon!\";\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tonInvokeClue(clue: Clue): void\n\t{\n\t\tif (clue.id === \"QM_1\")\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t\tthis._photoTaken = true;\n\t\t\tthis._databaseButton.enabled = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfeed.publish(\"that doesn't help you right now\", true);\n\t\t}\n\t}\n\n\tonContinue(): void\n\t{\n\t\tthis._screenIndex++;\n\n\t\tthis._databaseButton.enabled = false;\n\n\t\tif (this._screenIndex > 1)\n\t\t{\n\t\t\tif (!this._photoTaken)\n\t\t\t{\n\t\t\t\tgameManager.popScreen();\n\t\t\t\tmessenger.sendMessage(\"quantum moon vanished\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgameManager.popScreen();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class QuantumEntanglementScreen extends EventScreen\n{\n\t_displayText: string;\n\n\tconstructor()\n\t{\n\t\tsuper()\n\t\tif (locator.player.currentSector.getName() === \"Quantum Moon\")\n\t\t{\n\t\t\tthis._displayText = \"You turn off your flashlight and the world becomes pitch black.\\n\\nWhen you turn the flashlight back on, your surroundings have changed...\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._displayText = \"You climb on top of the quantum rock and turn off your flashlight. It's so dark you can't even see your hand in front of your face.\\n\\nWhen you turn the flashlight back on, you're still standing on top of the quantum rock, but your surrounding have changed...\";\n\t\t}\n\t}\n\n\tonEnter(): void\n\t{\n\t\tfeed.clear();\n\t\tfeed.publish(\"you become entangled with the quantum object\");\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn this._displayText;\n\t}\n\n\tonContinue(): void\n\t{\n\t\tgameManager.popScreen();\n\t}\n}\n\nexport class FollowTheVineScreen extends EventScreen\n{\n\t_screenIndex: number = 0;\n\t_silentRunning: boolean = false;\n\n\tinitButtons(): void\n\t{\n\t\tthis.addDatabaseButton();\n\t\tthis.addContinueButton();\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\tif (this._screenIndex == 0)\n\t\t{\n\t\t\treturn \"You launch your probe at one of the strangely-bluish flowers and it is promptly ingested. You follow your probe's tracking signal as the vine's vascular system carries it deep into the heart of Dark Bramble.\\n\\nYou're so focused on following the probe's signal, you don't notice the glowing lures until it's too late. You've flown straight into a nest of anglerfish!\";\n\t\t}\n\t\telse if (this._screenIndex == 1)\n\t\t{\n\t\t\tif (!this._silentRunning)\n\t\t\t{\n\t\t\t\treturn \"You reverse your thrusters, but it's too late. The anglerfish lunge with terrifying speed and devour your spacecraft whole.\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn \"Suddenly remembering the rules to an ancient children's game, you switch off your engines and silently drift into the nest.\\n\\nNone of the anglerfish seem to notice, and you safely reach the other side. You resume following the probe's signal, and it's not long before you reach an ancient derelict tangled in the roots of Dark Bramble.\";\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t    if (button == this._nextButton)\n\t    {\n\t    \tthis.onContinue();\n\t    }\n\t    else if (button == this._databaseButton)\n\t    {\n\t\t\tgameManager.pushScreen(gameManager.databaseScreen);\n\t\t\tgameManager.databaseScreen.setObserver(this);\n\t    }\n\t}\n\n\tonInvokeClue(clue: Clue): void\n\t{\n\t\tif (clue.id === \"D_2\")\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t\tthis._silentRunning = true;\n\t\t\tthis._screenIndex++;\n\t\t\tthis._databaseButton.enabled = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfeed.publish(\"that doesn't help you right now\", true);\n\t\t}\n\t}\n\n\tonContinue(): void\n\t{\n\t\tthis._screenIndex++;\n\t\tthis._databaseButton.enabled = false;\n\n\t\tif (this._screenIndex > 1)\n\t\t{\n\t\t\tif (!this._silentRunning)\n\t\t\t{\n\t\t\t\tgameManager.popScreen();\n\t\t\t\tplayerData.killPlayer();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgameManager.popScreen();\n\t\t\t\tmessenger.sendMessage(new Message(\"move to\", \"Ancient Vessel\"));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class AncientVesselScreen extends EventScreen\n{\n\t_warpButton: Button;\n\t_displayText: string;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._displayText = \"You explore the derelict and eventually find the bridge. Although the ship's life support systems are dead, a few computer terminals are still running on some sort of auxiliary power. You find records of the original signal the Nomai received from the Eye of the Universe. According to their analysis, whatever the signal came from must be older than the Universe itself!\\n\\nYou poke around a bit more and discover that the ship's warp drive finished recharging a few hundred years ago.\";\n\t}\n\n\tinitButtons(): void\n\t{\n\t\tthis.addButtonToToolbar(this._warpButton = new Button(\"Use Warp Drive\", 0, 0, 150, 50));\n\t\tsuper.initButtons();\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\treturn this._displayText;\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t    if (button == this._warpButton)\n\t    {\n\t    \tif (playerData.knowsSignalCoordinates())\n\t    \t{\n\t    \t\tif (!timeLoop.getEnabled())\n\t    \t\t{\n\t    \t\t\tgameManager.popScreen();\n\t    \t\t\tmessenger.sendMessage(new Message(\"teleport to\", \"Ancient Vessel 2\"));\n\t    \t\t\tfeed.clear();\n\t    \t\t\tfeed.publish(\"the ancient vessel warps to the coordinates of the Eye of the Universe\");\n\t    \t\t}\n\t    \t\telse\n\t    \t\t{\n\t    \t\t\tthis._displayText = \"You input the coordinates to the Eye of the Universe and try to use the warp drive, but it refuses to activate due to the presence of a 'massive temporal distortion'.\";\n\t    \t\t}\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\tthis._displayText = \"You try to use the warp drive, but apparently it won't activate without destination coordinates.\";\n\t    \t}\n\t    }\n\t    else if (button == this._nextButton)\n\t    {\n\t\t\tthis.onContinue();\n\t    }\n\t}\n\n\tonContinue(): void\n\t{\n\t\tgameManager.popScreen();\n\t}\n}\n\nexport class TimeLoopCentralScreen extends EventScreen\n{\n\t_screenIndex: number = 0;\n\t_yes: Button;\n\t_no: Button;\n\n\tinitButtons(): void\n\t{\n\t\tthis.addContinueButton();\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\tif (this._screenIndex == 0)\n\t\t{\n\t\t\treturn \"You're inside a huge spherical chamber at the center of the sandy Hourglass Twin. The two giant antennae you saw outside extend below the surface and converge within an elaborate coil-like piece of Nomai technology at the center of the chamber. This must be the source of the time loop!\\n\\nYou discover a transmitter that automatically tells the Nomai space station in orbit around Giant's Deep to launch a probe at the start of each loop.\\n\\nThe time loop machine requires the energy from a supernova to alter the flow of time. The Nomai tried to artificially make the sun go supernova thousands of years ago, but their attempts were unsuccessful.\";\n\t\t}\n\n\t\treturn \"You eventually find a way to the center of the chamber and find what looks like the interface to the Time Loop Machine.\\n\\nDo you want to disable the time loop?\";\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t\tsuper.onButtonUp(button);\n\t\t\n\t\tif (button == this._yes)\n\t\t{\n\t\t\tmessenger.sendMessage(\"disable time loop\");\n\t\t\tgameManager.popScreen();\n\t\t}\n\t\telse if (button == this._no)\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t}\n\t}\n\n\tonContinue(): void\n\t{\n\t\tthis._screenIndex++;\n\t\tthis.removeButtonFromToolbar(this._nextButton);\n\t\tthis.addButtonToToolbar(this._yes = new Button(\"Yes\"));\n\t\tthis.addButtonToToolbar(this._no = new Button(\"No\"));\n\t}\n}\n\nexport class EyeOfTheUniverseScreen extends EventScreen\n{\n\t_screenIndex: number = 0;\n\n\tgetDisplayText(): string\n\t{\n\t\tif (this._screenIndex == 0)\n\t\t{\n\t\t\treturn \"As you apprach the strange energy cloud surrounding the Eye of the Universe, you see the last few stars die in the distance. The Universe has become a pitch black void of nothingness.\\n\\nThe cloud dissipates as you reach its center, revealing a strange spherical object floating in space. Beneath its shimmering surface you see billions of tiny lights. As you get closer, you realize these lights resemble clusters of stars and galaxies. Every time you look away from the sphere and back again, the configuration of stars and galaxies changes.\\n\\nYou fire your jetpack thrusters and move into the sphere itself...\";\n\t\t}\n\n\t\treturn \"For the briefest moment you find yourself floating in a sea of stars and galaxies. Suddenly all of the stars collapse into a single point of light directly in front of you. Nothing happens for several seconds, then the point of light explodes outwards in a spectacular burst of energy. The shockwave slams into you and sends you careening away into space.\\n\\nYour life-support systems are failing, but you watch as energy and matter are spewed into space in all directions.\\n\\nAfter a while, your vision fades to black.\";\n\t}\n\n\tonContinue(): void\n\t{\n\t\tthis._screenIndex++;\n\n\t\tif (this._screenIndex == 2)\n\t\t{\n\t\t\tgameManager._solarSystem.player.currentSector = null;\n\t\t\tgameManager.pushScreen(new EndScreen());\n\t\t}\n\t}\n}\n\nexport class BrambleOutskirtsScreen extends EventScreen\n{\n\t_screenIndex: number = 0;\n\t_yes: Button;\n\t_no: Button;\n\n\tinitButtons(): void\n\t{\n\t\tthis.addDatabaseButton();\n\t\tthis.addButtonToToolbar(this._yes = new Button(\"Yes\"));\n\t\tthis.addButtonToToolbar(this._no = new Button(\"No\"));\n\t}\n\n\tgetDisplayText(): string\n\t{\n\t\tif (this._screenIndex == 0)\n\t\t{\n\t\t\treturn \"You explore the outer perimeter of Dark Bramble, where the tips of its thorny vines end in massive alien-looking white flowers (along with a few bluish ones).\\n\\nYou notice a small opening near the center of each flower...do you want to move in for a closer look?\";\n\t\t}\n\n\t\treturn \"As you approach, the flower opens and a strange force starts to pull you in. You desperately try to escape, but it's no use.\\n\\nYou are unceremoniously devoured by a giant space flower. You can hear yourself being digested as the world goes black...\";\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t\tsuper.onButtonUp(button);\n\t\t\n\t\tif (button == this._yes)\n\t\t{\n\t\t\tthis._screenIndex++;\n\t\t\tthis.removeButtonFromToolbar(this._yes);\n\t\t\tthis.removeButtonFromToolbar(this._no);\n\t\t\tthis.removeButtonFromToolbar(this._databaseButton);\n\t\t\tthis.addContinueButton();\n\t\t}\n\t\telse if (button == this._no)\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t}\n\t}\n\n\tonInvokeClue(clue: Clue): void\n\t{\n\t\tif (clue.id === \"D_3\")\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t\tmessenger.sendMessage(\"follow the vine\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfeed.publish(\"that doesn't help you right now\", true);\n\t\t}\n\t}\n\n\tonContinue(): void\n\t{\n\t\tplayerData.killPlayer();\n\t}\n}", "import { OWScreen } from \"./Screen\";\nimport { println } from \"./compat\";\n\nexport abstract class ScreenManager\n{\n  _screenStack: OWScreen[];\n  _skipRender: boolean = false;\n\n  constructor()\n  {\n    this._screenStack = new Array<OWScreen>();\n  }\n\n  lateUpdate(): void\n  {\n    // just in case gamemanager needs to do anything\n  }\n\n  runGameLoop(): void\n  {\n    if (this._screenStack.length > 0)\n    {\n      this._skipRender = false;\n      \n      // update active screen\n      const activeScreen: OWScreen = this._screenStack[this._screenStack.length - 1];\n      activeScreen.updateInput();\n      activeScreen.update();\n      this.lateUpdate();\n\n      if (this._skipRender)\n      {\n        return;\n      }\n\n      // find which screens should get rendered\n      let lowestRenderIndex: number = 0;\n\n      for (let i: number = this._screenStack.length - 1; i >= 0; i--)\n      {\n        if (!this._screenStack[i].overlay)\n        {\n          lowestRenderIndex = i;\n          break;\n        }\n      }\n\n      // render screens lowest-first\n      for (let i: number = lowestRenderIndex; i < this._screenStack.length; i++)\n      {\n        this._screenStack[i].renderBackground();\n        this._screenStack[i].renderButtons();\n        this._screenStack[i].render();\n      }\n    }\n    else\n    {\n      println(\"No screens on the stack!!!\");\n    }\n  }\n  \n  swapScreen(newScreen: OWScreen): void\n  {\n    if (this._screenStack.length > 0)\n    {\n      this._screenStack[this._screenStack.length - 1].onExit();\n      this._screenStack[this._screenStack.length - 1].active = false;\n      this._screenStack.splice(this._screenStack.length - 1, 1);\n    }\n    \n    this._screenStack.push(newScreen);\n    this._screenStack[this._screenStack.length - 1].active = true;\n    this._screenStack[this._screenStack.length - 1].onEnter();\n\n    this._skipRender = true;\n\n    println(\"SWAP:\", newScreen);\n  }\n  \n  pushScreen(nextScreen: OWScreen): void\n  {\n    if (this._screenStack.length > 0)\n    {\n      this._screenStack[this._screenStack.length - 1].onExit();\n      this._screenStack[this._screenStack.length - 1].active = false;\n    }\n    \n    this._screenStack.push(nextScreen);\n    nextScreen.active = true;\n    nextScreen.onEnter();\n\n    this._skipRender = true;\n\n    println(\"PUSH:\", nextScreen);\n  }\n  \n  popScreen(): void\n  {\n    this._screenStack[this._screenStack.length - 1].onExit();\n    this._screenStack[this._screenStack.length - 1].active = false;\n    this._screenStack.splice(this._screenStack.length - 1, 1);\n    \n    if (this._screenStack.length > 0)\n    {\n      this._screenStack[this._screenStack.length - 1].active = true;\n      this._screenStack[this._screenStack.length - 1].onEnter();\n    }\n\n    this._skipRender = true;\n\n    println(\"POP\");\n  }\n}", "import { MoveToScreen, TeleportScreen } from \"./EventScreen\";\nimport { OWNode } from \"./Node\";\nimport { timeLoop, gameManager, messenger, playerData, feed } from \"./app\";\nimport { JSONArray, JSONObject } from \"./compat\";\n\nexport class ExploreData\n{\n\t_node: OWNode;\n\t_exploreString: string;\n\t_exploreArray: JSONArray;\n\n\t_nodeObj: JSONObject;\n\t_activeExploreObj: JSONObject;\n\n\t_dirty: boolean;\n\n\tconstructor(node: OWNode, nodeObj: JSONObject)\n\t{\n\t\tthis._node = node;\n\t\tthis._nodeObj = nodeObj;\n\t}\n\n\tparseJSON(): void\n\t{\n\t    // parse as string\n\t    this._exploreString = this._nodeObj.getString(\"explore\", \"Nothing to see here!\");\n\t    this._exploreArray = new JSONArray();\n\n\t    // parse as explore object\n\t    if (this._exploreString.charAt(0) == '{')\n\t    {\n\t    \tthis._activeExploreObj = this._nodeObj.getJSONObject(\"explore\");\n\t    }\n\t    // parse as array of explore objects\n\t    else if (this._exploreString.charAt(0) == '[')\n\t    {\n\t    \tthis._exploreArray = this._nodeObj.getJSONArray(\"explore\");\n\t    \tthis._activeExploreObj = this._exploreArray.getJSONObject(0);\n\t    }\n\n\t    this._dirty = true;\n\t}\n\n\tupdateActiveExploreData(): void\n\t{\n\t\t// check wait times\n\t\tfor (let i: number = 0; i < this._exploreArray.size(); i++)\n\t    {\n\t    \tconst exploreObj: JSONObject = this._exploreArray.getJSONObject(i);\n\n\t    \tconst turnCycle: number = exploreObj.getInt(\"turn cycle\", 1);\n\t\t\tconst turn: number = timeLoop.getActionPoints() % turnCycle;\n\n\t\t\tif (exploreObj.getInt(\"on turn\", -1) == turn && exploreObj != this._activeExploreObj)\n\t\t\t{\n\t\t\t\tthis._activeExploreObj = exploreObj;\n\t\t\t\tthis._dirty = true;\n\t\t\t}\n\t    }\n\t}\n\n\tcanClueBeInvoked(clueID: string): boolean\n\t{\n\t\tif (clueID === \"QM_2\" && this._node.allowQuantumEntanglement())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (let i: number = 0; i < this._exploreArray.size(); i++)\n\t    {\n\t    \tconst exploreObj: JSONObject = this._exploreArray.getJSONObject(i);\n\n\t    \tif (exploreObj.getString(\"require clue\", \"\") === clueID && exploreObj != this._activeExploreObj)\n\t    \t{\n\t    \t\treturn true;\n\t    \t}\n\n\t    \t// NO LONGER IN USE\n\t    \tif (exploreObj.hasKey(\"clue event\") && exploreObj.getJSONObject(\"clue event\").getString(\"clue id\") === clueID)\n\t    \t{\n\t    \t\treturn true;\n\t    \t}\n\t    }\n\t    return false;\n\t}\n\n\tinvokeClue(clueID: string): void\n\t{\n\t\tif (clueID === \"QM_2\" && this._node.allowQuantumEntanglement())\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t\tmessenger.sendMessage(\"quantum entanglement\");\n\t\t}\n\n\t\tfor (let i: number = 0; i < this._exploreArray.size(); i++)\n\t    {\n\t    \tconst exploreObj: JSONObject = this._exploreArray.getJSONObject(i);\n\n\t    \t// unlock explore screens\n\t    \tif (exploreObj.getString(\"require clue\", \"\") === clueID && exploreObj != this._activeExploreObj)\n\t    \t{\n\t    \t\tthis._activeExploreObj = exploreObj;\n\t    \t\tthis._dirty = true;\n\t    \t}\n\n\t    \t// NO LONGER IN USE\n\t    \t// fire clue events\n\t    \tif (exploreObj.hasKey(\"clue event\"))\n\t    \t{\n\t    \t\tconst eventClueID: string = exploreObj.getJSONObject(\"clue event\").getString(\"clue id\");\n\n\t    \t\tif (eventClueID === clueID)\n\t    \t\t{\n\t    \t\t\tconst eventID: string = exploreObj.getJSONObject(\"clue event\").getString(\"event id\");\n\t\t    \t\tmessenger.sendMessage(eventID);\n\t    \t\t}\n\t    \t}\n\t    }\n\t}\n\n\texplore(): void\n\t{\n\t\tthis.updateActiveExploreData(); // sets dirty flag if explore data has changed\n\n\t\tif (this._dirty && this._activeExploreObj != null)\n\t\t{\n\t\t    this.fireEvents(this._activeExploreObj);\n\t\t    this.discoverClues(this._activeExploreObj);\n\t\t    this.revealHiddenPaths(this._activeExploreObj);\n\t\t    this._dirty = false;\n\t\t}\n\t}\n\n\tfireEvents(exploreObj: JSONObject): void\n\t{\n\t\tif (exploreObj.hasKey(\"fire event\"))\n\t\t{\n\t\t\tmessenger.sendMessage(exploreObj.getString(\"fire event\"));\n\t\t}\n\t\tif (exploreObj.hasKey(\"move to\"))\n\t\t{\n\t\t\tgameManager.swapScreen(new MoveToScreen(exploreObj.getString(\"text\"), exploreObj.getString(\"move to\")));\n\t\t}\n\t\tif (exploreObj.hasKey(\"teleport to\"))\n\t\t{\n\t\t\tgameManager.swapScreen(new TeleportScreen(exploreObj.getString(\"text\"), exploreObj.getString(\"teleport to\")));\n\t\t}\n\t}\n\n\tdiscoverClues(exploreObj: JSONObject): void\n\t{\n\t\tif (exploreObj.hasKey(\"discover clue\"))\n\t\t{\n\t\t\tplayerData.discoverClue(exploreObj.getString(\"discover clue\"));\n\t\t}\n\t}\n\n\trevealHiddenPaths(exploreObj: JSONObject): void\n\t{\n\t\t// reveal hidden paths\n\t    if (exploreObj.hasKey(\"reveal paths\"))\n\t    {\n\t    \tconst pathArray: JSONArray = exploreObj.getJSONArray(\"reveal paths\");\n\n\t    \tfor (let i: number = 0; i < pathArray.size(); i++)\n\t    \t{\n\t    \t\tthis._node.getConnection(pathArray.getString(i)).revealHidden();\n\t    \t}\n\n\t    \tfeed.publish(\"you discover a hidden path!\", true);\n\t    }\n\t}\n\n\tgetExploreText(): string\n\t{\n\t\tif (this._activeExploreObj != null)\n\t\t{\n\t\t\treturn this._activeExploreObj.getString(\"text\", \"no explore text\");\n\t\t}\n\n\t\treturn this._exploreString;\n\t}\n}", "import { Button } from \"./Button\";\nimport { Entity } from \"./Entity\";\nimport { Frequency } from \"./Enums\";\nimport { OWNode } from \"./Node\";\nimport { Sector } from \"./Sector\";\nimport { Vector2 } from \"./Vector2\";\nimport { frequencyToString, mediumFontData, playerData, smallFontData } from \"./app\";\n\nexport class FrequencyButton extends Button\n{\n\t_rightFacing: boolean = true;\n\n\tconstructor(rightFacing: boolean)\n\t{\n\t\tsuper(\"Switch Frequency\", width/2 + 140, 40, 50, 50);\n\n\t\tthis._rightFacing = rightFacing;\n\n\t\tif (!rightFacing)\n\t\t{\n\t\t\tthis.setScreenPosition(new Vector2(width/2 - 140, 40));\n\t\t}\n\t\t//_disabledPrompt = \"Switch Frequency\\n(none known)\";\n\t}\n\n\tdrawShape(): void\n\t{\n\t\tpush();\n\t\ttranslate(this.screenPosition.x, this.screenPosition.y);\n\n\t\tif (this._rightFacing)\n\t\t{\n\t\t\ttriangle(25, 0, 0, 15, 0, -15);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttriangle(-25, 0, 0, 15, 0, -15);\n\t\t}\n\n\t\tpop();\n\t}\n\n\tdrawText(alpha: number): void {}\n}\n\nexport class Telescope\n{\n\t_frequency: Frequency = Frequency.TRAVELER;\n\t_signalStrength: number;\n\n\tupdate(signalSources: SignalSource[]): void\n\t{\n\t\tthis._signalStrength = 0;\n\n\t\tfor (let i: number = 0; i < signalSources.length; i++)\n\t\t{\n\t\t\tthis._signalStrength += signalSources[i].getSignalStrength(new Vector2(mouseX, mouseY), this._frequency);\n\t\t}\n\t}\n\n\trender(): void\n\t{\n\t\tlet frequencyText: string = frequencyToString(this._frequency);\n\n\t\tif (!playerData.knowsFrequency(this._frequency))\n\t\t{\n\t\t\tif (this._frequency == Frequency.BEACON)\n\t\t\t{\n\t\t\t\tfrequencyText = \"Unknown Frequency 001\";\n\t\t\t}\n\t\t    else if (this._frequency == Frequency.QUANTUM)\n\t\t    {\n\t\t    \tfrequencyText = \"Unknown Frequency 002\";\n\t\t    }\n\t\t}\n\n\t\tconst xPos: number = width/2;\n\n\t\tfill(0, 0, 100);\n\t\ttextSize(18);\n\t\ttextFont(mediumFontData);\n\t\ttext(frequencyText, xPos, 40);\n\t\ttextFont(smallFontData);\n\n\t\t// draw signal feedback\n\t\tstroke(0, 0, 100);\n\t\tfill(200, 100, 100);\n\t\trectMode(CENTER);\n\t\trect(xPos, 70, max(0, this._signalStrength * 300 - random(50)), 7);\n\n\t\t// draw crosshairs\n\t    noFill();\n\t    stroke(0, 0, 100);\n\t    line(mouseX, 0, mouseX, height);\n\t    line(0, mouseY, width, mouseY);\n\t}\n\n\tnextFrequency(): void\n\t{\n\t\tconst index: number = (this._frequency + 1) % this.getFrequencyValues().length;\n\t\tthis._frequency = this.getFrequencyValues()[index];\n\n\t\t// if (!playerData.knowsFrequency(_frequency))\n\t\t// {\n\t\t// \tnextFrequency();\n\t\t// }\n\t}\n\n\tpreviousFrequency(): void\n\t{\n\t\tlet index: number = this._frequency - 1;\n\n\t\tif (index < 0)\n\t\t{\n\t\t\tindex = this.getFrequencyValues().length - 1;\n\t\t}\n\n\t\tthis._frequency = this.getFrequencyValues()[index];\n\n\t\t// if (!playerData.knowsFrequency(_frequency))\n\t\t// {\n\t\t// \tpreviousFrequency();\n\t\t// }\n\t}\n\n\tgetFrequencyValues(): Frequency[] {\n\t\treturn Object.values(Frequency).filter(f => typeof f === 'number') as Frequency[]\n\t}\n}\n\nexport class SignalSource extends Entity\n{\n\t_signals: Signal[];\n\n\tconstructor(node: OWNode)\n\tconstructor(screenPosition: Vector2, sector: Sector)\n\tconstructor(nodeOrPos: OWNode | Vector2, sector?: Sector)\n\t{\n\t\tsuper()\n\t\tif (nodeOrPos instanceof OWNode) {\n\t\t\tthis.setScreenPosition(nodeOrPos.screenPosition);\n\t\t\tthis._signals = new Array<Signal>();\n\t\t\tthis._signals.push(nodeOrPos.getSignal());\n\t\t} else {\n\t\t\tthis.setScreenPosition(nodeOrPos);\n\t\t\tthis._signals = sector.getSectorSignals();\n\t\t}\n\t}\n\n\taddSignal(signal: Signal): void\n\t{\n\t\tthis._signals.push(signal);\n\t}\n\n\tgetSignalStrength(telescopePos: Vector2, frequency: Frequency): number\n\t{\n\t\tif (this.hasSignalWithFrequency(frequency))\n\t\t{\n\t\t\tconst d: Vector2 = telescopePos.sub(this.screenPosition);\n\t\t\tconst dist: number = d.magnitude();\n\n\t\t\tconst u: number = max(0, 1 - (dist / 150));\n\t\t\treturn u * u * u;\n\t\t}\n\t\treturn 0;\n\t}\n\n\thasSignalWithFrequency(frequency: Frequency): boolean\n\t{\n\t\tfor (let i: number = 0; i < this._signals.length; i++)\n\t\t{\n\t\t\tif (this._signals[i].frequency == frequency)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class Signal\n{\n\tfrequency: Frequency = Frequency.BEACON;\n\n\tconstructor(signalType: string)\n\t{\n\t\tif (signalType === \"QUANTUM\")\n\t\t{\n\t\t\tthis.frequency = Frequency.QUANTUM;\n\t\t}\n\t\telse if (signalType === \"BEACON\")\n\t\t{\n\t\t\tthis.frequency = Frequency.BEACON;\n\t\t}\n\t\telse if (signalType === \"TRAVELER\")\n\t\t{\n\t\t\tthis.frequency = Frequency.TRAVELER;\n\t\t}\n\t}\n}", "import { ButtonObserver, Button } from \"./Button\";\nimport { Entity } from \"./Entity\";\nimport { ExploreData } from \"./ExploreData\";\nimport { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { NodeConnection } from \"./NodeConnection\";\nimport { Signal } from \"./Telescope\";\nimport { Vector2 } from \"./Vector2\";\nimport { messenger, EDIT_MODE, playerData, TEXT_SIZE } from \"./app\";\nimport { JSONObject, println } from \"./compat\";\n\nexport interface NodeButtonObserver\n{\n  onNodeSelected(node: OWNode): void;\n  onNodeGainFocus(node: OWNode): void;\n  onNodeLoseFocus(node: OWNode): void;\n}\n\nexport interface NodeObserver\n{\n  onNodeVisited(node: OWNode): void;\n}\n\nexport class OWNode extends Entity implements ButtonObserver, GlobalObserver\n{\n  /** NODE DATA **/\n  _id: string = \"\";\n  _name: string = \"\";\n  \n  entryPoint: boolean = false;\n  shipAccess: boolean = false;\n  allowTelescope: boolean = true;\n  gravity: boolean = true;\n\n  _signal: Signal | null = null;\n  \n  /** EXPLORE STATE **/\n  _visible: boolean = false;\n  _visited: boolean = false;\n  _explored: boolean = false;\n\n  _inRange: boolean = false;\n\n  _button: Button | null = null;\n  _connections: Map<OWNode, NodeConnection>;\n\n  _observers: NodeButtonObserver[];\n  _observer: NodeObserver | null = null;\n  \n  _nodeJSONObj: JSONObject | null = null;\n  _exploreData: ExploreData | null = null;\n\n  constructor(x: number, y: number)\n  constructor(id: string, nodeJSONObj: JSONObject)\n  constructor(xOrID: number | string, yOrObj: number | JSONObject)\n  {\n    super(typeof xOrID === 'number' ? xOrID : 0, typeof yOrObj === 'number' ? yOrObj : 0)\n    this._connections = new Map<OWNode, NodeConnection>();\n    this._observers = new Array<NodeButtonObserver>();\n    messenger.addObserver(this);\n    if (typeof xOrID === 'string' && typeof yOrObj !== 'number') {\n      this._id = xOrID;\n      this._name = xOrID;\n  \n      this.loadJSON(yOrObj);\n  \n      if (this.entryPoint) \n      {\n        this._visible = true;\n      }\n      \n      this._button = new Button(this._id, 0, 0, this.getSize() * 1.5, this.getSize() * 1.5);\n      this._button.setObserver(this);\n      this._button.visible = false;\n      this.addChild(this._button);\n    }\n  }\n\n  loadJSON(nodeJSONObj: JSONObject): void\n  {\n    this._nodeJSONObj = nodeJSONObj;\n\n    this._name = this._nodeJSONObj.getString(\"name\", this._id);\n\n    if (nodeJSONObj.hasKey(\"explore\"))\n    {\n      this._exploreData = new ExploreData(this, nodeJSONObj);\n    }\n    \n    this.position.x = this._nodeJSONObj.getJSONObject(\"position\").getFloat(\"x\");\n    this.position.y = this._nodeJSONObj.getJSONObject(\"position\").getFloat(\"y\");\n\n    this._visible = this._nodeJSONObj.getBoolean(\"start visible\", this._visible);\n\n    if (EDIT_MODE)\n    {\n      this._visible = true;\n    }\n    \n    this.entryPoint = this._nodeJSONObj.getBoolean(\"entry point\", this.entryPoint);\n    this.shipAccess = this.entryPoint || this._nodeJSONObj.getBoolean(\"ship access\", this.shipAccess);\n    this.allowTelescope = this._nodeJSONObj.getBoolean(\"allow telescope\", this.allowTelescope);\n    this.gravity = this._nodeJSONObj.getBoolean(\"gravity\", this.gravity);\n    \n    if (this._nodeJSONObj.hasKey(\"signal\"))\n    {\n      this._signal = new Signal(this._nodeJSONObj.getString(\"signal\"));\n    }\n  }\n\n  savePosition(): void\n  {\n    this._nodeJSONObj.getJSONObject(\"position\").setFloat(\"x\", this.position.x);\n    this._nodeJSONObj.getJSONObject(\"position\").setFloat(\"y\", this.position.y);\n    println(this._id + \" position saved:\", this.position);\n  }\n\n  onReceiveGlobalMessage(message: Message): void\n  {\n\n  }\n\n  isExplorable(): boolean {return (this._nodeJSONObj != null && this._nodeJSONObj.hasKey(\"explore\"));}\n\n  getExploreData(): ExploreData {return this._exploreData;}\n\n  getProbeDescription(): string \n  {\n    if (this._nodeJSONObj.hasKey(\"probe description\"))\n    {\n      return this._nodeJSONObj.getString(\"probe description\");\n    }\n    return this.getDescription();\n  }\n\n  getDescription(): string {return this._nodeJSONObj.getString(\"description\", \"a vast expanse of nothing\");}\n\n  hasDescription(): boolean {return (this._nodeJSONObj != null && this._nodeJSONObj.hasKey(\"description\"));}\n\n  isProbeable(): boolean {return (this._nodeJSONObj != null && this._nodeJSONObj.hasKey(\"description\"));}\n\n  isConnectedTo(node: OWNode): boolean {return this._connections.has(node);}\n\n  inRange(): boolean\n  {\n    return this._inRange;\n  }\n\n  updateInRange(isPlayerInShip: boolean, playerNode: OWNode): void \n  {\n    this._inRange = false;\n\n    if (playerNode == this)\n    {\n      this._inRange = true;\n    }\n\n    if (this.entryPoint && isPlayerInShip)\n    {\n      this._inRange = true;\n    }\n    \n    if (playerNode != null && this.isConnectedTo(playerNode))\n    {\n      this._inRange = true;\n    }\n  }\n  \n  getConnection(node: OWNode): NodeConnection\n  getConnection(nodeID: string): NodeConnection\n  getConnection(nodeOrID: OWNode | string): NodeConnection\n  {\n    if (nodeOrID instanceof OWNode) {\n      return this._connections.get(nodeOrID);\n    }\n    for (const node of this._connections.keys()) \n    {\n      if (node.getID() === nodeOrID)\n      {\n        return this.getConnection(node);\n      }\n    }\n    return null;\n  }\n\n  allowQuantumEntanglement(): boolean // note - \"quantum state\" only used for Quantum Moon right now\n  {\n    if (this._nodeJSONObj == null) return false;\n    return this._nodeJSONObj.getBoolean(\"entanglement node\", false);\n  }\n\n  getSignal(): Signal {return this._signal;}\n\n  getID(): string {return this._id;}\n\n  getActualName(): string {return this._name;}\n  \n  getKnownName(): string\n  {\n    if (this._visited) return this.getActualName();\n    else return \"???\";\n  } \n\n  setVisible(visible: boolean): void {this._visible = visible;}\n  \n  visit(): void\n  {\n    this._visited = true;\n    this.setVisible(true);\n\n    if (this._nodeJSONObj != null && this._nodeJSONObj.hasKey(\"fire event\"))\n    {\n      messenger.sendMessage(this._nodeJSONObj.getString(\"fire event\"));\n    }\n\n    for (const connection of this._connections.values()) \n    {\n      connection.reveal();\n    }\n\n    if (this._observer != null)\n    {\n      this._observer.onNodeVisited(this);\n    }\n  }\n\n  explore(): void\n  {\n    this._explored = true;\n    this._exploreData.explore();\n\n    if (this._signal != null)\n    {\n      playerData.learnFrequency(this._signal.frequency);\n    }\n  }\n  \n  update(): void\n  {\n    if (!this._visible) {return;}\n    this._button.enabled = this.inRange() || EDIT_MODE;\n    this._button.update();\n  }\n\n  getAlpha(): number\n  {\n    if (!this.inRange())\n    {\n      return 35;\n    }\n    return 100;\n  }\n\n  getSize(): number\n  {\n    if (this.entryPoint) \n    {\n      return 50;\n    }\n    else if (!this.isExplorable())\n    {\n      return 25;\n    }\n\n    return 35;\n  }\n  \n  draw(): void\n  {\n    if (!this._visible) {return;}\n\n    if (this._button.hoverState)\n    {\n      stroke(200, 100, 100, this.getAlpha());\n    }\n    else\n    {\n      stroke(0, 0, 100, this.getAlpha());\n    }\n\n    push();\n    translate(this.screenPosition.x, this.screenPosition.y);\n\n      if (!this.isExplorable())\n      {\n        fill(0, 0, 0);\n        ellipse(0, 0, this.getSize(), this.getSize());\n        pop();\n        return;\n      }\n          \n      if (this.entryPoint)\n      {\n        fill(0, 0, 0);\n        ellipse(0, 0, this.getSize(), this.getSize());\n\n        // halfWidth: number = getSize() * 0.5;\n        // halfHeight: number = getSize() * 0.5;\n        // offset: number = 7;\n\n        // push();\n        // rotate(PI * 0.25);\n        //   line(-halfWidth, 0, -halfWidth + offset, 0);\n        //   line(halfWidth - offset, 0, halfWidth, 0);\n        //   line(0, -halfHeight, 0, -halfHeight + offset);\n        //   line(0, halfHeight - offset, 0, halfHeight);\n        // pop();\n      }\n      else\n      {\n        fill(0, 0, 0);\n        rect(0, 0, this.getSize(), this.getSize());\n      }\n\n      if (!this._explored)\n      {\n        fill(0, 0, 100, this.getAlpha());\n        textAlign(CENTER, CENTER);\n        textSize(30);\n        text('?', 0, 0);\n      }\n\n    pop();\n  }\n\n  drawName(): void\n  {\n    if (!this._visible) {return;}\n    if (!this.isExplorable()) {return;}\n\n    // draw text backdrop\n    const textPos: Vector2 = new Vector2(this.screenPosition.x, this.screenPosition.y - this.getSize() / 2 - 20);\n    \n    noStroke();\n    fill(0, 0, 0);\n    textSize(TEXT_SIZE);\n    rect(textPos.x, textPos.y, textWidth(this.getKnownName()), TEXT_SIZE + 4);\n    \n    fill(0, 0, 100, this.getAlpha());\n    \n    textAlign(CENTER, CENTER);\n    text(this.getKnownName(), textPos.x, textPos.y);\n  }\n\n  addConnection(connection: NodeConnection): void\n  {\n    if ([...this._connections.values()].includes(connection))\n    {\n      println(\"These nodes are already connected!!!\");\n      return;\n    }\n        \n    if (connection.node1 != this)\n    {\n      this._connections.set(connection.node1, connection);\n    }\n    else\n    {\n      this._connections.set(connection.node2, connection);\n    }\n  }\n\n  setNodeObserver(observer: NodeObserver): void\n  {\n    this._observer = observer;\n  }\n\n  addObserver(observer: NodeButtonObserver): void\n  {\n    this._observers.push(observer);\n  }\n  \n  removeAllObservers(): void\n  {\n    this._observers.length = 0;\n  }\n  \n  onButtonUp(button: Button): void\n  {\n    for (let i: number = 0; i < this._observers.length; i++)\n    {\n      this._observers[i].onNodeSelected(this);\n    }\n  }\n  \n  onButtonEnterHover(button: Button): void\n  {\n    for (let i: number = 0; i < this._observers.length; i++)\n    {\n      this._observers[i].onNodeGainFocus(this);\n    }\n  }\n  \n  onButtonExitHover(button: Button): void\n  {\n    for (let i: number = 0; i < this._observers.length; i++)\n    {\n      this._observers[i].onNodeLoseFocus(this);\n    }\n  }\n}", "import { OWNode } from \"./Node\";\nimport { Vector2 } from \"./Vector2\";\nimport { EDIT_MODE, messenger } from \"./app\";\nimport { JSONObject } from \"./compat\";\n\nexport class NodeConnection\n{\n  node1: OWNode;\n  node2: OWNode;\n\n  _description: string;\n  _hasDescription: boolean = false;\n\n  _adjacentToPlayer: boolean = false;\n  \n  _traversed: boolean = false;\n  _visible: boolean = false;\n  _gated: boolean = false;\n  _oneWay: boolean = false;\n\n  _hidden: boolean = false;\n\n  _connectionObj: JSONObject;\n  \n  constructor(n1: OWNode, n2: OWNode, connectionObj: JSONObject)\n  {\n    this.node1 = n1;\n    this.node2 = n2;\n\n    this._connectionObj = connectionObj;\n    \n    this.node1.addConnection(this);\n    this.node2.addConnection(this);\n\n    this._oneWay = connectionObj.getBoolean(\"one-way\", this._oneWay);\n    this._hidden = connectionObj.getBoolean(\"hidden\", this._hidden);\n    this._gated = connectionObj.getBoolean(\"gated\", this._gated);\n\n    if (EDIT_MODE) \n    {\n      this._visible = true;\n    }\n\n    if (connectionObj.hasKey(\"description\"))\n    {\n      this._hasDescription = true;\n      this._description = connectionObj.getString(\"description\");\n    }\n  }\n\n  updateAdjacentToPlayer(playerNode: OWNode): void\n  {\n    this._adjacentToPlayer = false;\n\n    if (this.node1 == playerNode || this.node2 == playerNode)\n    {\n      this._adjacentToPlayer = true;\n    }\n  }\n\n  hasDescription(): boolean\n  {\n    return this._hasDescription;\n  }\n\n  getDescription(): string\n  {\n    return this._description;\n  }\n\n  getWrongWayText(): string\n  {\n    return \"looks like this path is only traversible from the other direction\";\n  }\n\n  getOtherNode(node: OWNode): OWNode\n  {\n    if (node == this.node1)\n    {\n      return this.node2;\n    }\n\n    return this.node1;\n  }\n  \n  traversibleFrom(startingNode: OWNode): boolean\n  {\n    return (!this._gated && (!this._oneWay || startingNode == this.node1));\n  }\n\n  fireTraverseEvent(): void\n  {\n    if (this._connectionObj.hasKey(\"traverse event\"))\n    {\n      messenger.sendMessage(this._connectionObj.getString(\"traverse event\"));\n    }\n  }\n\n  fireFailEvent(): void\n  {\n    if (this._connectionObj.hasKey(\"fail event\"))\n    {\n      messenger.sendMessage(this._connectionObj.getString(\"fail event\"));\n    }\n  }\n\n  traverse(): void\n  {\n    //_oneWay = false;\n    this._traversed = true;\n  }\n\n  revealHidden(): void\n  {\n    this._hidden = false;\n    this.reveal();\n  }\n\n  setVisible(visible: boolean): void {this._visible = visible;}\n  \n  reveal(): void\n  {\n    if (this._hidden)\n    {\n      return;\n    }\n\n    this.node1.setVisible(true);\n    this.node2.setVisible(true);\n    this._visible = true;\n  }\n\n  getAlpha(): number\n  {\n    if (!this._adjacentToPlayer)\n    {\n      return 35;\n    }\n    return 100;\n  }\n  \n  render(): void\n  {\n      if (!this._visible) {return;}\n\n      const dir: Vector2 = (this.node2.screenPosition.sub(this.node1.screenPosition));\n      const dist: number = dir.magnitude();\n      dir.normalize();\n\n      // draw segmented line\n      if (!this._traversed)\n      {\n        stroke(0, 0, 100, this.getAlpha());\n        //stroke(200, 100, 100);\n\n        let l: number = 0;\n        const segmentLength: number = 5;\n\n        while(l < dist)\n        {\n          const startPos: Vector2 = this.node1.screenPosition.add(dir.mult(l));\n          const endPos: Vector2 = this.node1.screenPosition.add(dir.mult(l+segmentLength));\n          line(startPos.x, startPos.y, endPos.x, endPos.y);\n          l += segmentLength * 3;\n        }\n      }\n      // draw solid line\n      else\n      {\n        stroke(0, 0, 100, this.getAlpha());\n        line(this.node1.screenPosition.x, this.node1.screenPosition.y, this.node2.screenPosition.x, this.node2.screenPosition.y);\n      }\n      \n      if (!this._oneWay) {return;}\n      \n      // draw arrow\n      const tip: Vector2 = this.node1.screenPosition.add(dir.mult(dist * 0.6));\n      const base: Vector2 = tip.sub(dir.mult(14));\n      \n      const right: Vector2 = base.add(dir.rightNormal().scale(7));\n      const left: Vector2 = base.add(dir.leftNormal().scale(7));\n      \n      fill(0, 0, 0);\n      triangle(right.x, right.y, left.x, left.y, tip.x, tip.y);\n  }\n}", "import { Actor, Entity } from \"./Entity\";\nimport { SectorArrivalScreen, QuantumEntanglementScreen } from \"./EventScreen\";\nimport { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { NodeObserver, OWNode, NodeButtonObserver } from \"./Node\";\nimport { NodeConnection } from \"./NodeConnection\";\nimport { Clue } from \"./PlayerData\";\nimport { SignalSource, Signal } from \"./Telescope\";\nimport { Vector2 } from \"./Vector2\";\nimport { messenger, gameManager, locator } from \"./app\";\nimport { JSONObject, loadJSONObject, JSONArray, saveJSONObject, println } from \"./compat\";\n\nexport class Sector implements NodeObserver, GlobalObserver\n{\n  _sectorRoot: Entity;\n\n  _actors: Actor[];\n  _nodes: OWNode[];\n  _nodeConnections: NodeConnection[];\n  \n  _name: string = \"unnamed\";\n  _JSONFilename: string;\n  _sectorJSON: JSONObject;\n\n  _skipArrivalScreen: boolean = false;\n  \n  orbitNode: OWNode;\n  defaultActorPosition: Vector2 = new Vector2(width - 100, height - 100);\n      \n  constructor()\n  {\n    this._sectorRoot = new Entity(width/2, height/2);\n    this._actors = new Array<Actor>();\n    this._nodes = new Array<OWNode>();\n    this._nodeConnections = new Array<NodeConnection>();\n\n    this.orbitNode = new OWNode(80, 170); // screen space\n    this.orbitNode.gravity = false;\n\n    messenger.addObserver(this);\n  }\n\n  setAnchorOffset(offsetX: number, offsetY: number): void\n  {\n    this._sectorRoot.setPosition(width/2 + offsetX, height/2 + offsetY);\n  }\n  \n  loadFromJSON(filename: string): void\n  {\n    this._JSONFilename = filename;\n    this._sectorJSON = loadJSONObject(filename);\n    \n    /** LOAD NODES **/\n    const nodes: JSONObject = this._sectorJSON.getJSONObject(\"Nodes\");\n    \n    for (const nodeName of nodes.keys()) {\n      this.addNode(this.createNode(nodeName, nodes.getJSONObject(nodeName)));\n    }\n    \n    /** LOAD CONNECTIONS **/\n    const connectionJSONArray: JSONArray = this._sectorJSON.getJSONArray(\"Connections\");\n    \n    for (let i: number = 0; i < connectionJSONArray.size(); i++)\n    {\n      const connection: JSONObject = connectionJSONArray.getJSONObject(i);\n      \n      const node1: OWNode = this.getNode(connection.getString(\"Node 1\"));\n      const node2: OWNode = this.getNode(connection.getString(\"Node 2\"));\n\n      this._nodeConnections.push(new NodeConnection(node1, node2, connection));\n    }\n  }\n\n  createNode(name: string, nodeObj: JSONObject): OWNode\n  {\n    return new OWNode(name, nodeObj);\n  }\n\n  saveSectorJSON(): void\n  {\n    saveJSONObject(this._sectorJSON, \"data/\" + this._JSONFilename);\n    println(\"Sector JSON saved\");\n  }\n  \n  load(): void\n  {\n    // stub to override\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    // stub to override\n  }\n\n  onReceiveGlobalMessage(message: Message): void\n  {\n    if (message.id === \"quantum entanglement\")\n    {\n      this.onQuantumEntanglement();\n    }\n  }\n\n  onNodeVisited(node: OWNode): void\n  {\n    this.updateNodeRanges(gameManager._solarSystem.isPlayerInShip(), node);\n  }\n\n  onArrival(): void\n  {\n    if (!this._skipArrivalScreen && this._sectorJSON.hasKey(\"Sector Arrival\"))\n    {\n      this._skipArrivalScreen = true;\n      gameManager.pushScreen(new SectorArrivalScreen(this._sectorJSON.getJSONObject(\"Sector Arrival\").getString(\"text\"), this.getName()));\n    }\n  }\n\n  onQuantumEntanglement(): void\n  {\n    if (locator.player.currentSector == this)\n    {\n      gameManager.pushScreen(new QuantumEntanglementScreen());\n\n      // teleport player\n      for (let i: number = 0; i < this._nodes.length; i++)\n      {\n        if (this._nodes[i].allowQuantumEntanglement() && this._nodes[i] != locator.player.currentNode)\n        {\n          locator.player.setNode(this._nodes[i]);\n          break;\n        }\n      }\n    }\n  }\n\n  canClueBeInvoked(clue: Clue): boolean\n  {\n    return false;\n  }\n\n  // called from SectorScreen\n  invokeClue(clue: Clue): void\n  {\n    // override in derrived class\n  }\n\n  // update whether each node is \"in range\" (i.e. selectable)\n  updateNodeRanges(isPlayerInShip: boolean, playerNode: OWNode): void\n  {\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      this._nodes[i].updateInRange(isPlayerInShip, playerNode);\n    }\n\n    for (let i: number = 0; i < this._nodeConnections.length; i++)\n    {\n      this._nodeConnections[i].updateAdjacentToPlayer(playerNode);\n    }\n  }\n\n  allowTelescope(): boolean {return true;}\n\n  getName(): string\n  {\n    return this._name;\n  }\n  \n  getNode(index: number): OWNode\n  getNode(nodeID: string): OWNode\n  getNode(indexOrID: number | string): OWNode\n  {\n    if (typeof indexOrID === 'number') {\n      if (this._nodes[indexOrID])\n      {\n        return this._nodes[indexOrID];\n      }\n      println(\"No nodes at index \" + indexOrID);\n      return null;\n    } else {\n      for (let i: number = 0; i < this._nodes.length; i++)\n      {\n        if (this._nodes[i].getID() === indexOrID)\n        {\n          return this._nodes[i];\n        }\n      }\n      return null;\n    }\n  }\n\n  getSectorSignalSources(): SignalSource[]\n  {\n    const signalSources: SignalSource[] = new Array<SignalSource>();\n\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      if (this._nodes[i].getSignal() != null)\n      {\n        signalSources.push(new SignalSource(this._nodes[i]));\n      }\n    }\n    return signalSources;\n  }\n\n  getSectorSignals(): Signal[]\n  {\n    const nodeSignals: Signal[] = new Array<Signal>();\n\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      if (this._nodes[i].getSignal() != null)\n      {\n        nodeSignals.push(this._nodes[i].getSignal());\n      }\n    }\n    return nodeSignals;\n  }\n  \n  addNodeButtonObserver(observer: NodeButtonObserver): void\n  {\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      this._nodes[i].addObserver(observer);\n    }\n  }\n  \n  removeAllNodeButtonObservers(): void\n  {\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      this._nodes[i].removeAllObservers();\n    }\n  }\n  \n  update(): void\n  {\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      this._nodes[i].update();\n    }\n    \n    for (let i: number = 0; i < this._actors.length; i++)\n    {\n      this._actors[i].update();\n\n      if (this._actors[i].isDead())\n      {\n        this.removeActor(this._actors[i]);\n      }\n    }\n  }\n\n  renderBackground(): void\n  {\n    push();\n      translate(this._sectorRoot.position.x, this._sectorRoot.position.y);\n      this.drawSectorBackdrop();\n    pop();\n\n    // draw letterbox\n    fill(0, 0, 0);\n    noStroke();\n    rectMode(CORNER);\n    rect(0, 0, width, 90);\n    rect(0, height - 90, width, 90);\n    rectMode(CENTER);\n  }\n  \n  render(): void\n  {\n    for (let i: number = 0; i < this._nodeConnections.length; i++)\n    {\n      this._nodeConnections[i].render();\n    }\n    \n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      this._nodes[i].render();\n    }\n    \n    for (let i: number = 0; i < this._actors.length; i++)\n    {\n      this._actors[i].render();\n    }\n\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      this._nodes[i].drawName();\n    }\n  }\n  \n  addNode(node: OWNode): void\n  {\n    if (!this._nodes.includes(node))\n    {\n      this._nodes.push(node);\n      node.setNodeObserver(this);\n      this._sectorRoot.addChild(node);\n    }\n    else\n    {\n      println(\"Node is already in this Sector!!!\");\n    }\n  }\n  \n  removeNode(node: OWNode): void\n  {\n    if (this._nodes.includes(node))\n    {\n      this._nodes.splice(this._nodes.indexOf(node), 1);\n      node.setNodeObserver(null);\n      this._sectorRoot.removeChild(node);\n    }\n    else\n    {\n      println(\"Node is not in this Sector!!!\");\n    }\n  }\n  \n  addActor(actor: Actor): void\n  addActor(actor: Actor, nodeName: string): void\n  addActor(actor: Actor, atNode: OWNode): void\n  addActor(actor: Actor, nodeOrName?: OWNode | string): void\n  {\n    const atNode: OWNode | null = (nodeOrName instanceof OWNode ? nodeOrName : this.getNode(nodeOrName)) ?? null\n    if (!this._actors.includes(actor))\n    {\n      actor.currentSector = this;\n\n      this._actors.push(actor);\n      this._sectorRoot.addChild(actor);\n      \n      if (atNode != null)\n      {\n        actor.setNode(atNode);\n      }\n      else\n      {\n        // spawn actor off-screen\n        actor.setScreenPosition(this.orbitNode.screenPosition.sub(new Vector2(200, 0)));\n        actor.moveToNode(this.orbitNode);\n      }\n    }\n    else\n    {\n      println(\"Actor is already in this Sector!!!\");\n    }\n  }\n  \n  removeActor(actor: Actor): void\n  {\n    if (this._actors.includes(actor))\n    {\n      actor.currentNode = null;\n      actor.currentSector = null;\n      actor.lastSector = this;\n      this._actors.splice(this._actors.indexOf(actor), 1);\n      this._sectorRoot.removeChild(actor);\n    }\n    else\n    {\n      println(\"Actor is not in this Sector!!!\");\n    }\n  }\n}", "import { Button } from \"./Button\";\nimport { DatabaseObserver } from \"./DatabaseScreen\";\nimport { ExploreData } from \"./ExploreData\";\nimport { OWNode } from \"./Node\";\nimport { Clue } from \"./PlayerData\";\nimport { OWScreen } from \"./Screen\";\nimport { feed, timeLoop, gameManager, locator, mediumFontData } from \"./app\";\nimport { Translator } from \"./Translator\";\n\nexport class ExploreScreen extends OWScreen implements DatabaseObserver\n{\n\tstatic BOX_WIDTH: number = 700;\n\tstatic BOX_HEIGHT: number = 400;\n\t_exploreData: ExploreData;\n\n\t_databaseButton: Button;\n\t_backButton: Button;\n\t_waitButton: Button;\n\n\tconstructor(location: OWNode)\n\t{\n\t\tsuper();\n\t\tthis._exploreData = location.getExploreData();\n\t\tthis.overlay = true; // continue to render BG\n\n\t\tthis.addButtonToToolbar(this._databaseButton = new Button(\"Use Database\", 0, 0, 150, 50));\n\t\tthis.addButtonToToolbar(this._waitButton  = new Button(\"Wait [1 min]\", 0, 0, 150, 50));\n\t\tthis.addButtonToToolbar(this._backButton = new Button(\"Continue\", 0, 0, 150, 50));\n\n\t\tthis._exploreData.parseJSON();\n\t}\n\n\tupdate(): void{}\n\n\trenderBackground(): void {}\n\n\tasync render(): Promise<void>\n\t{\n\t\tpush();\n\t\ttranslate(width/2 - ExploreScreen.BOX_WIDTH/2, height/2 - ExploreScreen.BOX_HEIGHT/2);\n\n\t\t\tstroke(0, 0, 100);\n\t\t\tfill(0, 0, 0);\n\t\t\trectMode(CORNER);\n\t\t\trect(0, 0, ExploreScreen.BOX_WIDTH, ExploreScreen.BOX_HEIGHT);\n\n\t\t\tfill(0, 0, 100);\n\n\t\t    textFont(mediumFontData);\n\t\t    textSize(18);\n\t\t\ttextAlign(LEFT, TOP);\n\t\t\t// text(this._exploreData.getExploreText(), 10, 10, ExploreScreen.BOX_WIDTH - 20, ExploreScreen.BOX_HEIGHT - 10);\n\t\t\ttextFont('SimSun');\n\t\t\tconst displayText = this._exploreData.getExploreText();\n\t\t\tconst translatedText = await Translator.getInstance().translate(displayText);\n\t\t\tconst finalText = displayText + \"\\n[\u8BD1: \" + translatedText + \"]\";\n\t\t\ttext(finalText, 10, 10, ExploreScreen.BOX_WIDTH - 20, ExploreScreen.BOX_HEIGHT - 10);\n\n\t\tpop();\n\n\t\tfeed.render();\n\t\ttimeLoop.renderTimer();\n\t}\n\n\tonEnter(): void {}\n\n\tonExit(): void {}\n\n\tonInvokeClue(clue: Clue): void\n\t{\n\t\t// try to invoke it on the node first\n\t\tif (this._exploreData.canClueBeInvoked(clue.id))\n\t\t{\n\t\t\t// force-quit the database screen\n\t\t\tgameManager.popScreen();\n\t\t\tthis._exploreData.invokeClue(clue.id);\n\t\t\tthis._exploreData.explore();\n\t\t}\n\t\t// next try the whole sector\n\t\telse if (locator.player.currentSector != null && locator.player.currentSector.canClueBeInvoked(clue))\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t\tlocator.player.currentSector.invokeClue(clue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfeed.publish(\"that doesn't help you right now\", true);\n\t\t}\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t\tif (button == this._databaseButton)\n\t    {\n\t      gameManager.pushScreen(gameManager.databaseScreen);\n\t      gameManager.databaseScreen.setObserver(this);\n\t    }\n\t    else if (button == this._backButton)\n\t    {\n\t    \tgameManager.popScreen();\n\t    }\n\t    else if (button == this._waitButton)\n\t    {\n\t    \ttimeLoop.waitFor(1);\n\t    \tthis._exploreData.explore();\n\t    }\n\t}\n\n\tonButtonEnterHover(button: Button): void{}\n\tonButtonExitHover(button: Button): void{}\n}", "import { Actor, Probe } from \"./Entity\";\nimport { ExploreScreen } from \"./ExploreScreen\";\nimport { OWNode } from \"./Node\";\nimport { NodeConnection } from \"./NodeConnection\";\nimport { feed, timeLoop, gameManager, messenger } from \"./app\";\n\nexport interface NodeActionObserver\n{\n\tonExploreNode(node: OWNode): void;\n\tonProbeNode(node: OWNode): void;\n\tonTravelAttempt(succeeded: boolean, node: OWNode, connection: NodeConnection): void;\n}\n\nexport abstract class NodeAction\n{\n\t_prompt: string = \"\";\n\t_mouseButton: string = LEFT;\n\t_observer: NodeActionObserver;\n\n\tsetObserver(observer: NodeActionObserver): void\n\t{\n\t\tthis._observer = observer;\n\t}\n\n\tgetMouseButton(): string\n\t{\n\t\treturn this._mouseButton;\n\t}\n\n\tsetMouseButton(button: string): void\n\t{\n\t\tthis._mouseButton = button;\n\t}\n\n\tabstract execute(): void;\n\t\n\tgetCost(): number\n\t{\n\t\treturn 0;\n\t}\n\n\tgetPrompt(): string\n\t{\n\t\treturn this._prompt;\n\t}\n\n\tsetPrompt(description: string): void\n\t{\n\t\tif (this._mouseButton == LEFT)\n\t\t{\n\t\t\tthis._prompt += \"L-Clk - \" + description;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._prompt += \"R-Clk - \" + description;\n\t\t}\n\n\t\tthis._prompt += \" [\" + this.getCost() + \" min]\";\n\t}\n}\n\nexport class ProbeAction extends NodeAction\n{\n\t_player: Actor;\n\t_location: OWNode;\n\n\tconstructor(button: string, player: Actor, location: OWNode, observer: NodeActionObserver)\n\t{\n\t\tsuper();\n\t\tthis._player = player;\n\t\tthis._location = location;\n\t\tthis.setMouseButton(button);\n\t\tthis.setObserver(observer);\n\t\tthis.setPrompt(\"probe\");\n\t}\n\n\texecute(): void\n\t{\n\t\tfeed.publish(\"you see \" + this._location.getProbeDescription());\n\n\t\tconst probe: Actor = new Probe();\n\t\tthis._player.currentSector.addActor(probe);\n\t\tprobe.setScreenPosition(this._player.screenPosition);\n\t\tprobe.moveToNode(this._location);\n\n\t\tthis._observer.onProbeNode(this._location);\n\t}\n}\n\nexport class ExploreAction extends NodeAction\n{\n\t_location: OWNode;\n\n\tconstructor(button: string, location: OWNode, observer: NodeActionObserver)\n\t{\n\t\tsuper();\n\t\tthis._location = location;\n\t\tthis.setMouseButton(button);\n\t\tthis.setObserver(observer);\n\t\tthis.setPrompt(\"explore\");\n\t}\n\n\tgetCost(): number\n\t{\n\t\treturn 1;\n\t}\n\n\texecute(): void\n\t{\n\t\ttimeLoop.spendActionPoints(this.getCost());\n\n\t\t// prevent the action from happening if the sun's going to explode\n\t\tif (timeLoop.getActionPoints() == 0) \n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tfeed.clear();\n\t\tfeed.publish(\"you explore the \" + this._location.getActualName());\n\t\t\n\t\tthis._observer.onExploreNode(this._location);\n\t\tgameManager.pushScreen(new ExploreScreen(this._location));\n\t\tthis._location.explore();\n\t}\n}\n\nexport class TravelAction extends NodeAction\n{\n\t_player: Actor;\n\t_ship: Actor;\n\t_destination: OWNode;\n\n\tconstructor(button: string, player: Actor, ship: Actor | null, destination: OWNode, observer: NodeActionObserver)\n\t{\n\t\tsuper();\n\t\tthis._ship = ship;\n\t\tthis._player = player;\n\t\tthis._destination = destination;\n\t\tthis.setMouseButton(button);\n\t\tthis.setObserver(observer);\n\t\tthis.setPrompt();\n\t}\n\n\tsetPrompt(prompt?: string): void\n\t{\n\t\tif (prompt !== undefined) return super.setPrompt(prompt);\n\t\tif (this._ship != null)\n\t\t{\n\t\t\tif (this._ship.currentNode == null && this._destination.gravity)\n\t\t\t{\n\t\t\t\tthis.setPrompt(\"land here\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.setPrompt(\"fly here\");\n\t\t}\n\t\telse if (this._destination.gravity)\n\t\t{\n\t\t\tthis.setPrompt(\"hike here\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setPrompt(\"jetpack here\");\n\t\t}\n\t}\n\n\tgetCost(): number\n\t{\n\t\treturn 1;\n\t}\n\n\texecute(): void\n\t{\n\t\tfeed.clear();\n\n\t\tif (this._player.currentNode != null)\n\t\t{\n\t\t\tconst connection: NodeConnection = this._destination.getConnection(this._player.currentNode);\n\n\t\t\tif (connection != null)\n\t\t\t{\t\n\t\t\t\tif (!connection.traversibleFrom(this._player.currentNode))\n\t\t\t\t{\n\t\t\t\t\tconnection.fireFailEvent();\n\t\t\t\t\tfeed.publish(connection.getWrongWayText(), true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconnection.fireTraverseEvent();\n\t\t\t\tconnection.traverse();\n\n\t\t\t\tif (connection.hasDescription())\n\t\t\t\t{\n\t\t\t\t\tfeed.publish(\"you traverse \" + connection.getDescription());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// publish feed first in case we want to override it (e.g. death-by-anglerfish scenario)\n\t\tif (this._destination.hasDescription())\n\t\t{\n\t\t\tfeed.publish(\"you reach \" + this._destination.getDescription());\n\t\t}\n\n\t\tif (this._ship != null)\n\t\t{\n\t\t\tthis._ship.moveToNode(this._destination);\n\t\t}\n\t\t\n\t\tmessenger.sendMessage(\"reset reachability\");\n\t\tthis._player.moveToNode(this._destination);\n\t\tthis._observer.onTravelAttempt(true, this._destination, this._destination.getConnection(this._player.currentNode));\n\t\ttimeLoop.spendActionPoints(this.getCost());\n\t}\n}", "import { ButtonObserver, Button } from \"./Button\";\nimport { NodeButtonObserver, OWNode } from \"./Node\";\nimport { Sector } from \"./Sector\";\nimport { Vector2 } from \"./Vector2\";\n\nexport class SectorEditor implements NodeButtonObserver, ButtonObserver\n{\n  _activeSector: Sector;\n  _saveButton: Button;\n  \n  _selection: OWNode;\n  _dragging: boolean = false;\n  \n  constructor(sector: Sector)\n  {\n    this._activeSector = sector;\n    this._saveButton = new Button(\"Save\", width - 75, height - 50, 100, 50);\n    this._saveButton.setObserver(this);\n  }\n  \n  update(): void\n  {\n    this._saveButton.update();\n    \n    if (this._selection != null)\n    {\n      if (this._dragging)\n      {\n        this._selection.setScreenPosition(new Vector2(mouseX, mouseY));\n        \n        if (!mouseIsPressed)\n        {\n          this._selection.savePosition();\n          this._selection = null;\n          this._dragging = false;\n        }\n      }\n      \n      this._dragging = (mouseIsPressed && mouseButton == CENTER);\n    }\n  }\n  \n  render(): void\n  {\n    this._saveButton.render();\n  }\n  \n  onButtonUp(button: Button): void\n  {\n    if (button == this._saveButton)\n    {\n      this._activeSector.saveSectorJSON();\n    }\n  }\n  \n  onNodeGainFocus(node: OWNode): void\n  {\n    this._selection = node;\n  }\n  \n  onNodeLoseFocus(node: OWNode): void\n  {\n    if (!this._dragging)\n    {\n      this._selection = null;\n    }\n  }\n\n  onTravelToNode(node: OWNode): void{}\n  onExploreNode(node: OWNode): void{}\n  onProbeNode(node: OWNode): void{}\n  \n  onButtonEnterHover(button: Button): void{}\n  onButtonExitHover(button: Button): void{}\n  onNodeSelected(node: OWNode): void{}\n}", "import { Button } from \"./Button\";\nimport { DatabaseObserver } from \"./DatabaseScreen\";\nimport { Actor } from \"./Entity\";\nimport { ExploreData } from \"./ExploreData\";\nimport { ExploreScreen } from \"./ExploreScreen\";\nimport { NodeButtonObserver, OWNode } from \"./Node\";\nimport { NodeActionObserver, NodeAction, ProbeAction, TravelAction, ExploreAction } from \"./NodeAction\";\nimport { NodeConnection } from \"./NodeConnection\";\nimport { Clue } from \"./PlayerData\";\nimport { OWScreen } from \"./Screen\";\nimport { Sector } from \"./Sector\";\nimport { SectorEditor } from \"./SectorEditor\";\nimport { gameManager, feed, timeLoop, EDIT_MODE, mediumFontData, smallFont } from \"./app\";\n\nexport class SectorScreen extends OWScreen implements NodeButtonObserver, NodeActionObserver, DatabaseObserver\n{\n  _player: Actor;\n  _ship: Actor;\n  _sector: Sector;\n  \n  _editor: SectorEditor;\n  \n  _focusNode: OWNode;\n\n  _databaseButton: Button;\n  _liftoffButton: Button;\n  _waitButton: Button;\n  _telescopeButton: Button;\n\n  _actionlessPrompt: string = \"inaccessible\";\n  _actions: NodeAction[];\n\n  constructor(sector: Sector, player: Actor, ship: Actor)\n  {\n    super();\n    \n    this._actions = new Array<NodeAction>();\n    this._editor = new SectorEditor(sector);\n    \n    this._player = player;\n    this._ship = ship;\n    this._sector = sector;\n\n    this.addButtonToToolbar(this._databaseButton = new Button(\"Use Database\", 0, 0, 150, 50));\n    this.addButtonToToolbar(this._telescopeButton = new Button(\"Scan for Signals\", 0, 0, 150, 50));\n    this._telescopeButton.setDisabledPrompt(\"Scan for Signals\\n(view obstructed)\");\n\n    this.addButtonToToolbar(this._waitButton  = new Button(\"Wait [1 min]\", 0, 0, 150, 50));\n    this.addButtonToToolbar(this._liftoffButton  = new Button(\"Leave Sector\", 0, 0, 150, 50));\n    this._liftoffButton.setDisabledPrompt(\"Leave Sector\\n(must be at ship)\");\n  }\n\n  onEnter(): void\n  {\n    this._sector.addNodeButtonObserver(this);\n    this._sector.addNodeButtonObserver(this._editor);\n    this._sector.updateNodeRanges(this.isPlayerInShip(), this._player.currentNode);\n    this._focusNode = null;\n  }\n  \n  onExit(): void\n  {\n    this._sector.removeAllNodeButtonObservers();\n  }\n\n  onButtonUp(button: Button): void\n  {\n    if (button == this._databaseButton)\n    {\n      gameManager.databaseScreen.setObserver(this);\n      gameManager.pushScreen(gameManager.databaseScreen);\n    }\n    else if (button == this._liftoffButton)\n    {\n      this._sector.removeActor(this._player);\n      this._sector.removeActor(this._ship);\n      gameManager.loadSolarSystemMap();\n      feed.clear();\n      feed.publish(\"you leave \" + this._sector.getName());\n    }\n    else if (button == this._telescopeButton)\n    {\n      gameManager.loadTelescopeView();\n    }\n    else if (button == this._waitButton)\n    {\n      timeLoop.waitFor(1);\n    }\n  }\n\n  onInvokeClue(clue: Clue): void\n  {\n    // check for node-specific clue effects\n    if (this._player.currentNode != null && this._player.currentNode.isExplorable())\n    {\n      const exploreData: ExploreData = this._player.currentNode.getExploreData();\n      exploreData.parseJSON();\n\n      if (exploreData.canClueBeInvoked(clue.id))\n      {\n        gameManager.popScreen(); // force-quit the database screen\n        gameManager.pushScreen(new ExploreScreen(this._player.currentNode)); // push on a new explorescreen\n        exploreData.invokeClue(clue.id);\n        exploreData.explore();\n        return;\n      }\n    }\n    \n    // next try the whole sector\n    if (this._player.currentSector != null && this._player.currentSector.canClueBeInvoked(clue))\n    {\n      this._player.currentSector.invokeClue(clue);\n    }\n    else\n    {\n      feed.publish(\"that doesn't help you right now\", true);\n    }\n  }\n\n  update(): void\n  {\n    // update action button visibility\n    this._liftoffButton.enabled = (this._player.currentNode == this._ship.currentNode);\n    this._telescopeButton.enabled = (this._player.currentNode != null && this._player.currentNode.allowTelescope && this._player.currentSector.allowTelescope());\n\n    this._sector.update();\n    if (EDIT_MODE) this._editor.update();\n  }\n\n  renderBackground(): void\n  {\n    super.renderBackground();\n    this._sector.renderBackground();\n  }\n\n  render(): void\n  {\n    this._sector.render();\n    feed.render();\n    timeLoop.renderTimer();\n\n    fill(0, 0, 100);\n    textSize(18);\n    textFont(mediumFontData);\n    textAlign(RIGHT);\n    text(this._sector.getName(),width - 20, height - 100);\n\n    if (!this.active) return;\n    if (EDIT_MODE) this._editor.render();\n\n    this.drawNodeGUI(this._focusNode, this._actions);\n  }\n\n  drawNodeGUI(target: OWNode, actions: NodeAction[]): void\n  {\n    if (target == null || (this._actions.length == 0 && target == this._player.currentNode)) {return;}\n\n    smallFont();\n\n    const yOffset: number = 60;\n    let promptWidth: number = textWidth(this._actionlessPrompt);\n\n    // find prompt width\n    for (let i: number = 0; i < actions.length; i++) \n    {\n      promptWidth = max(promptWidth, textWidth(actions[i].getPrompt()));\n    }\n\n    // draw box\n    stroke(200, 100, 100);\n    fill(0, 0, 0);\n    rectMode(CORNER);\n    rect(target.screenPosition.x - promptWidth * 0.5 - 10, target.screenPosition.y + yOffset - 15, promptWidth + 15, max(20, 20 * actions.length) + 10);\n\n    // draw prompts\n    fill(0, 0, 100);\n    textAlign(LEFT, CENTER);\n\n    for (let i: number = 0; i < actions.length; i++) \n    {\n      text(actions[i].getPrompt(), target.screenPosition.x - promptWidth * 0.5, target.screenPosition.y + yOffset + 20 * i);\n    }\n\n    if (actions.length == 0)\n    {\n      text(this._actionlessPrompt, target.screenPosition.x - promptWidth * 0.5, target.screenPosition.y + yOffset);\n    }\n  }\n\n  onTravelAttempt(succeeded: boolean, node: OWNode, connection: NodeConnection): void{}\n  onExploreNode(node: OWNode): void{}\n  onProbeNode(node: OWNode): void{}\n\n  onNodeSelected(node: OWNode): void\n  {\n    /** EXCECUTE ACTION **/\n    for (let i: number = 0; i < this._actions.length; i++) \n    {\n      if (this._actions[i].getMouseButton() == mouseButton)\n      {\n        this._actions[i].execute();\n        break;\n      }\n    }\n\n    this.refreshAvailableActions();\n  }\n  \n  onNodeGainFocus(node: OWNode): void\n  {\n    this._focusNode = node;\n    this.refreshAvailableActions();\n  }\n  \n  onNodeLoseFocus(node: OWNode): void\n  {\n    if (node == this._focusNode)\n    {\n      this._focusNode = null;\n      this.refreshAvailableActions();\n    }\n  }\n\n  refreshAvailableActions(): void\n  {\n    this._actions.length = 0;\n\n    if (this._focusNode == null) \n    {\n      return;\n    }\n\n    if (this._player.currentNode != this._focusNode)\n    {\n      if (this._focusNode.inRange())\n      {\n        if (this._focusNode.isProbeable())\n        {\n          this._actions.push(new ProbeAction(RIGHT, this._player, this._focusNode, this));\n        }\n        \n        if (this.isPlayerInShip() && this._focusNode.shipAccess)\n        {\n          this._actions.push(new TravelAction(LEFT, this._player, this._ship, this._focusNode, this));\n        }\n        else\n        {\n          this._actions.push(new TravelAction(LEFT, this._player, null, this._focusNode, this));\n        }\n      }\n    }\n    else\n    {\n      if (this._focusNode.isExplorable())\n      {\n        this._actions.push(new ExploreAction(LEFT, this._focusNode, this));\n      }\n    }\n  }\n\n  isPlayerInShip(): boolean\n  {\n    return(this._player.currentNode == this._ship.currentNode);\n  }\n}", "import { Button } from \"./Button\";\nimport { OWScreen } from \"./Screen\";\nimport { Sector } from \"./Sector\";\nimport { Telescope, SignalSource, FrequencyButton } from \"./Telescope\";\nimport { gameManager } from \"./app\";\n\nexport class SectorTelescopeScreen extends OWScreen\n{\n\t_sector: Sector;\n\t_telescope: Telescope;\n\t_exitButton: Button;\n\t_zoomOutButton: Button;\n\t_nextFrequency: Button;\n\t_previousFrequency: Button;\n\n\t_signalSources: SignalSource[];\n\n\tconstructor(sector: Sector, telescope: Telescope)\n\t{\n\t\tsuper();\n\t\tthis._sector = sector;\n\t\tthis._telescope = telescope;\n\t\tthis._signalSources = sector.getSectorSignalSources();\n\t\t\n\t\tthis.addButton(this._nextFrequency = new FrequencyButton(true));\n\t\tthis.addButton(this._previousFrequency = new FrequencyButton(false));\n\n\t\tthis.addButtonToToolbar(this._zoomOutButton = new Button(\"Zoom Out\", 0, 0, 150, 50));\n\t\tthis.addButtonToToolbar(this._exitButton = new Button(\"Exit\", 0, 0, 150, 50));\n\t}\n\n\tonEnter(): void\n\t{\n\t\tnoCursor();\n\t}\n\n\tonExit(): void\n\t{\n\t\tcursor(HAND);\n\t}\n\n\tupdate(): void\n\t{\n\t\t// don't want to update node buttons\n\t\t//_sector.update();\n\t\tthis._telescope.update(this._signalSources);\n\t}\n\n\trenderBackground(): void\n\t{\n\t\tsuper.renderBackground();\n\t\tthis._sector.renderBackground();\n\t}\n\n\trender(): void\n\t{\n\t\tthis._sector.render();\n\t\tthis._telescope.render();\n\t}\n\n\tonButtonUp(button: Button): void\n\t{\n\t\tif (button == this._exitButton)\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t\tgameManager.popScreen();\n\t\t}\n\t\telse if (button == this._zoomOutButton)\n\t\t{\n\t\t\tgameManager.popScreen();\n\t\t}\n\t\telse if (button == this._nextFrequency)\n\t\t{\n\t\t\tthis._telescope.nextFrequency();\n\t\t}\n\t\telse if (button == this._previousFrequency)\n\t    {\n\t\t\tthis._telescope.previousFrequency();\n\t    }\n\t}\n}", "import { OWNode } from \"./Node\";\nimport { messenger } from \"./app\";\nimport { JSONObject } from \"./compat\";\n\nexport class AnglerfishNode extends OWNode\n{\n\tconstructor(nodeName: string, nodeJSONObj: JSONObject)\n\t{\n\t\tsuper(nodeName, nodeJSONObj);\n\t\tthis.entryPoint = true;\n\t\tthis.shipAccess = true;\n\t\tthis.gravity = false;\n\n\t\tthis._visible = true;\n\t}\n\n\tgetKnownName(): string\n\t{\n\t\tif (this._visited) return \"Anglerfish\";\n\t\telse return \"???\";\n\t} \n\n\tgetDescription(): string \n\t{\n\t\treturn \"an enormous hungry-looking anglerfish\";\n\t}\n\n\tgetProbeDescription(): string \n\t{\n\t\treturn \"a light shining through the fog\";\n\t}\n\n\thasDescription(): boolean {return true;}\n\n\tisProbeable(): boolean {return true;}\n\n\tisExplorable(): boolean {return true;} // tricks graphics into rendering question mark\n\n\tvisit(): void\n\t{\n\t\tthis._visited = true;\n\t\tthis.setVisible(true);\n\n\t\tmessenger.sendMessage(\"death by anglerfish\");\n\n\t\tif (this._observer != null)\n\t\t{\n\t\t\tthis._observer.onNodeVisited(this);\n\t\t}\n\t}\n}", "import { OWNode } from \"./Node\";\nimport { locator } from \"./app\";\nimport { JSONObject } from \"./compat\";\n\nexport class QuantumNode extends OWNode\n{\n\tconstructor(name: string, nodeJSON: JSONObject)\n\t{\n\t\tsuper(name, nodeJSON);\n\t}\n\n\tupdateQuantumStatus(quantumState: number): void\n\t{\n\t\tconst visible: boolean = this._nodeJSONObj.getInt(\"quantum location\") == quantumState;\n\t\tthis.setVisible(visible);\n\n\t\t// hide connections\n\t\tif (!visible)\n\t\t{\n\t\t\tfor (const connection of this._connections.values()) \n\t\t    {\n\t\t    \tconnection.setVisible(visible);\n\t\t    }\n\t\t}\n\t}\n\n\tallowQuantumEntanglement(): boolean\n\t{\n\t\treturn this._nodeJSONObj.getInt(\"quantum location\") == locator.getQuantumMoonLocation() && this._nodeJSONObj.getBoolean(\"entanglement node\", false);\n\t}\n}", "import { AnglerfishNode } from \"./AnglerfishNode\";\nimport { Actor } from \"./Entity\";\nimport { QuantumArrivalScreen } from \"./EventScreen\";\nimport { Message } from \"./GlobalMessenger\";\nimport { OWNode } from \"./Node\";\nimport { QuantumNode } from \"./QuantumNode\";\nimport { Sector } from \"./Sector\";\nimport { Vector2 } from \"./Vector2\";\nimport { locator, gameManager } from \"./app\";\nimport { JSONObject } from \"./compat\";\n\nexport class Comet extends Sector\n{  \n  load(): void\n  {\n    this._name = \"the Comet\";\n    this.loadFromJSON(\"data/sectors/comet.json\");\n    //setAnchorOffset(100, 30);\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(200, 30, 100);\n    fill(0, 0, 0);\n    ellipse(0, 0, 300, 300);\n  }\n}\n\nexport class RockyTwin extends Sector\n{  \n  load(): void\n  {\n    this._name = \"the rocky Hourglass Twin\";\n    this.loadFromJSON(\"data/sectors/rocky_twin.json\");\n    //setAnchorOffset(100, 30);\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(60, 100, 100);\n    fill(0, 0, 0);\n    ellipse(0, 0, 500, 500);\n  }\n}\n\nexport class SandyTwin extends Sector\n{  \n  load(): void\n  {\n    this._name = \"the sandy Hourglass Twin\";\n    this.loadFromJSON(\"data/sectors/sandy_twin.json\");\n    //setAnchorOffset(100, 30);\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(60, 100, 100);\n    fill(0, 0, 0);\n    ellipse(0, 0, 500, 500);\n  }\n}\n\nexport class TimberHearth extends Sector\n{  \n  load(): void\n  {\n    this._name = \"Timber Hearth\";\n    this.loadFromJSON(\"data/sectors/timber_hearth.json\");\n    //setAnchorOffset(100, 30);\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(200, 100, 100);\n    fill(0, 0, 0);\n    ellipse(0, 0, 500, 500);\n  }\n}\n\nexport class BrittleHollow extends Sector\n{  \n  load(): void\n  { \n    this._name = \"Brittle Hollow\";\n    this.loadFromJSON(\"data/sectors/brittle_hollow.json\");\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(0, 100, 100);\n    fill(0, 0, 0);\n    ellipse(0, 0, 500, 500);\n    this.drawBlackHole(35);\n  }\n\n  drawBlackHole(radius: number): void \n  {\n    // black hole\n    noStroke();\n    fill(0,100,0);\n    ellipse(0, 0, radius * 0.5, radius * 0.5);\n    \n    // spiral\n    noFill();\n    strokeWeight(1);\n    stroke(260, 80, 70);\n\n    const start: number = radius * 0.125;\n    const end: number = radius;\n    const spirals: number = 3;\n    const step: number = 0.1 * PI;\n\n    let x0: number = start;\n    let y0: number = 0;\n\n    for (let t: number = step; t < spirals * TWO_PI; t += step) \n    {\n      let theta: number = t;\n\n      let r: number = (theta / (spirals * TWO_PI)) * (end - start) + start;\n      const x3: number = r * cos(theta);\n      const y3: number = r * sin(theta);\n\n      theta -= step / 3;\n      r = (theta / (spirals * TWO_PI)) * (end - start) + start;\n      const x2: number = r * cos(theta);\n      const y2: number = r * sin(theta);\n\n      theta -= step / 3;\n      r = (theta / (spirals * TWO_PI)) * (end - start) + start;\n      const x1: number = r * cos(theta);\n      const y1: number = r * sin(theta);\n\n      bezier(x0, y0, x1, y1, x2, y2, x3, y3);\n      x0 = x3;\n      y0 = y3;\n    }\n  }\n}\n\nexport class GiantsDeep extends Sector\n{  \n  load(): void\n  { \n    this._name = \"Giant's Deep\";\n    this.loadFromJSON(\"data/sectors/giants_deep.json\");\n    this.setAnchorOffset(0, 60);\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    fill(0, 0, 0);\n\n    stroke(180, 100, 100);\n    ellipse(0, 0, 600, 600);\n\n    stroke(200, 100, 60);\n    ellipse(0, 0, 400, 400);\n\n    // stroke(220, 100, 50);\n    // ellipse(0, 0, 100, 100);\n  }\n}\n\nexport class DarkBramble extends Sector\n{\n  _fogLightNodes: OWNode[];\n  _fogLightPositions: Vector2[];\n\n  constructor()\n  {\n    super();\n    this._fogLightNodes = new Array<OWNode>();\n    this._fogLightPositions = new Array<Vector2>();\n  }\n\n  load(): void\n  {\n    this._name = \"Dark Bramble\";\n    this.loadFromJSON(\"data/sectors/dark_bramble.json\");\n\n    for (let i: number = 0; i < this._fogLightNodes.length; i++)\n    {\n      const index: number = int(random(0, this._fogLightPositions.length));\n      //println(\"pos:\", this._fogLightPositions[index]);\n      this._fogLightNodes[i].setPosition(this._fogLightPositions[index]);\n      this._fogLightPositions.splice(index, 1);\n    }\n  }\n\n  createNode(name: string, nodeObj: JSONObject): OWNode\n  {\n    let newNode: OWNode;\n\n    if (nodeObj.hasKey(\"anglerfish\"))\n    {\n      newNode = new AnglerfishNode(name, nodeObj);\n      this._fogLightNodes.push(newNode);\n      this._fogLightPositions.push(new Vector2(newNode.position));\n    }\n    else\n    {\n      newNode = new OWNode(name, nodeObj);\n    }\n\n    if (nodeObj.getBoolean(\"fog light\", false))\n    {\n      this._fogLightNodes.push(newNode);\n      this._fogLightPositions.push(new Vector2(newNode.position));\n    }\n\n    return newNode;\n  }\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(120, 100, 100);\n    fill(0, 0, 0);\n    ellipse(100, 0, 700, 500);\n  }\n}\n\nexport class QuantumMoon extends Sector\n{\n  _quantumLocation: number = 0;\n  _turnsSinceEOTU: number = 0;\n\n  load(): void\n  {\n    this._name = \"Quantum Moon\";\n    this.loadFromJSON(\"data/sectors/quantum_moon.json\");\n    //setAnchorOffset(100, 30);\n  }\n\n  onReceiveGlobalMessage(message: Message): void\n  {\n    if (message.id === \"quantum entanglement\")\n    {\n      if (locator.player.currentSector == this)\n      {\n        this.collapse();\n        this.onQuantumEntanglement();\n      }\n    }\n  }\n\n  onArrival(): void\n  {\n    // overrides normal arrival screen\n    gameManager.pushScreen(new QuantumArrivalScreen());\n  }\n\n  createNode(name: string, nodeObj: JSONObject): OWNode\n  {\n    return new QuantumNode(name, nodeObj);\n  }\n\n  collapse(): void\n  {\n    // move to random location\n    let tLocation: number = this._quantumLocation;\n    while (tLocation == this._quantumLocation)\n    {\n      tLocation = int(random(5));\n    }\n    this._quantumLocation = tLocation;\n\n    // limit how many turns can pass without going to the EOTU\n    if (this._quantumLocation != 4)\n    {\n      this._turnsSinceEOTU++;\n\n      if (this._turnsSinceEOTU > 4)\n      {\n        this._quantumLocation = 4;\n        this._turnsSinceEOTU = 0;\n      }\n    }\n    \n    // update node visibility\n    for (let i: number = 0; i < this._nodes.length; i++)\n    {\n      (this._nodes[i] as QuantumNode).updateQuantumStatus(this._quantumLocation);\n    }\n  }\n\n  onQuantumEntanglement(): void\n  {\n    super.onQuantumEntanglement();\n      \n    // remove ship\n    if (locator.ship.currentSector == this)\n    {\n      locator.ship.currentSector.removeActor(locator.ship);\n    }\n  }\n\n  getQuantumLocation(): number {return this._quantumLocation;}\n\n  allowTelescope(): boolean {return false;}\n  \n  drawSectorBackdrop(): void\n  {\n    stroke(300, 50, 100);\n    fill(0, 0, 0);\n    ellipse(0, 0, 300, 300);\n  }\n\n  removeActor(actor: Actor): void\n  {\n    super.removeActor(actor);\n    actor.lastSector = null; // prevents animation of leaving Sector\n  }\n}\n\nexport class EyeOfTheUniverse extends Sector\n{  \n  load(): void\n  {\n    this._name = \"The Thing Older Than The Universe\";\n    this.loadFromJSON(\"data/sectors/eye_of_the_universe.json\");\n  }\n\n  allowTelescope(): boolean {return false;}\n  \n  drawSectorBackdrop(): void\n  {\n  }\n}", "import { Actor, Player, Ship } from \"./Entity\";\nimport { SectorName } from \"./Enums\";\nimport { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { OWNode } from \"./Node\";\nimport { Sector } from \"./Sector\";\nimport { Comet, RockyTwin, SandyTwin, TimberHearth, BrittleHollow, GiantsDeep, DarkBramble, QuantumMoon, EyeOfTheUniverse } from \"./SectorLibrary\";\nimport { messenger, feed, gameManager } from \"./app\";\nimport { println } from \"./compat\";\n\nexport class SolarSystem implements GlobalObserver\n{\n  player: Actor;\n  ship: Actor;\n  \n  comet: Sector;\n  rockyTwin: Sector;\n  sandyTwin: Sector;\n  timberHearth: Sector;\n  brittleHollow: Sector;\n  giantsDeep: Sector;\n  darkBramble: Sector;\n  quantumMoon: Sector;\n  eyeOfTheUniverse: Sector;\n\n  _sectorList: Sector[];\n  \n  constructor()\n  {\n    messenger.addObserver(this);\n\n    println(\"Solar System loading...\");\n\n    this._sectorList = new Array<Sector>();\n\n    this._sectorList.push(this.comet = new Comet());\n    this._sectorList.push(this.rockyTwin = new RockyTwin());\n    this._sectorList.push(this.sandyTwin = new SandyTwin());\n    this._sectorList.push(this.timberHearth = new TimberHearth());\n    this._sectorList.push(this.brittleHollow = new BrittleHollow());\n    this._sectorList.push(this.giantsDeep = new GiantsDeep());\n    this._sectorList.push(this.darkBramble = new DarkBramble());\n    this._sectorList.push(this.quantumMoon = new QuantumMoon());\n    this._sectorList.push(this.eyeOfTheUniverse = new EyeOfTheUniverse());\n    \n    this.comet.load();\n    this.rockyTwin.load();\n    this.sandyTwin.load();\n    this.timberHearth.load();\n    this.brittleHollow.load();\n    this.giantsDeep.load();\n    this.darkBramble.load();\n    this.quantumMoon.load();\n    this.eyeOfTheUniverse.load();\n\n    this.player = new Player();\n    this.ship = new Ship(this.player);\n  }\n\n  onReceiveGlobalMessage(message: Message): void\n  {\n    if (message.id === \"spawn ship\")\n    {\n      this.timberHearth.addActor(this.ship, \"Village\");\n\n      // keeps player on top of ship\n      const tNode: OWNode = this.player.currentNode;\n      this.timberHearth.removeActor(this.player);\n      this.timberHearth.addActor(this.player, tNode);\n    }\n    else if (message.id === \"move to\")\n    {\n      const node: OWNode = this.getNodeByName(message.text);\n\n      this.player.moveToNode(node);\n\n      if (node.shipAccess)\n      {\n        this.ship.moveToNode(node);\n      }\n\n      feed.clear();\n      feed.publish(\"you reach \" + node.getDescription());\n    }\n    else if (message.id === \"teleport to\")\n    {\n      for (let i: number = 0; i < this._sectorList.length; i++)\n      {\n        const teleportNode: OWNode = this._sectorList[i].getNode(message.text);\n\n        if (teleportNode != null)\n        {\n          this.player.currentSector.removeActor(this.player);\n          this._sectorList[i].addActor(this.player, teleportNode);\n          gameManager.loadSector(this._sectorList[i]);\n\n          feed.clear();\n          feed.publish(\"you are teleported to \" + teleportNode.getDescription());\n        }\n      }\n    }\n    else if (message.id === \"quantum moon vanished\")\n    {\n      this.player.currentSector.removeActor(this.player);\n      this.ship.currentSector.removeActor(this.ship);\n      gameManager.loadSolarSystemMap();\n    }\n  }\n\n  isPlayerInShip(): boolean\n  {\n    return(this.player.currentNode === this.ship.currentNode);\n  }\n\n  getNodeByName(nodeName: string): OWNode\n  {\n    for (let i: number = 0; i < this._sectorList.length; i++)\n    {\n      const node: OWNode = this._sectorList[i].getNode(nodeName);\n\n      if (node != null)\n      {\n        return node;\n      }\n    }\n    return null;\n  }\n  \n  getSectorByName(sectorName: SectorName): Sector\n  {    \n    switch(sectorName)\n    {\n      case SectorName.COMET:\n        return this.comet;\n      case SectorName.ROCKY_TWIN:\n        return this.rockyTwin;\n      case SectorName.SANDY_TWIN:\n        return this.sandyTwin;\n      case SectorName.TIMBER_HEARTH:\n        return this.timberHearth;\n      case SectorName.BRITTLE_HOLLOW:\n        return this.brittleHollow;\n      case SectorName.GIANTS_DEEP:\n        return this.giantsDeep;\n      case SectorName.DARK_BRAMBLE:\n        return this.darkBramble;\n      case SectorName.QUANTUM_MOON:\n        return this.quantumMoon;\n      case SectorName.EYE_OF_THE_UNIVERSE:\n        return this.eyeOfTheUniverse;\n      default:\n        break;\n    }\n    return null;\n  }\n}", "import { Button } from \"./Button\";\nimport { Ship, Player } from \"./Entity\";\nimport { OWNode } from \"./Node\";\nimport { Sector } from \"./Sector\";\nimport { QuantumMoon } from \"./SectorLibrary\";\nimport { locator, smallFontData } from \"./app\";\nimport { println } from \"./compat\";\n\nexport abstract class SectorButton extends Button\n{\n  _sector: Sector;\n  node: OWNode;\n\n  constructor(id: string, x: number, y: number, w: number, h: number, sector: Sector)\n  {\n    super(id, x, y, w, h);\n    this.node = new OWNode(x, y);\n    this._sector = sector;\n  }\n\n  getRadius(): number\n  {\n    return this._bounds.y * 0.5;\n  }\n\n  getSector(): Sector\n  {\n    return this._sector;\n  }\n  \n  render(): void\n  {\n    this.drawNonHighlighted();\n\n    if (this.hoverState)\n    {\n      strokeWeight(2);\n    }\n    \n    this.drawPlanet();\n    this.drawYouAreHere();\n    \n    strokeWeight(1);\n  }\n  \n  abstract drawPlanet(): void;\n\n  drawNonHighlighted(): void{}\n  \n  drawName(name?: string, xPos?: number): void\n  {\n    fill(0, 0, 100);\n    textAlign(CENTER, CENTER);\n    textSize(18);\n    text(name ?? this.id, xPos ?? this.screenPosition.x, this.screenPosition.y - this.getRadius() - 40);\n  }\n\n  drawYouAreHere(): void\n  {\n    if (locator.ship.currentSector == this._sector)\n    {\n      (locator.ship as Ship).drawAt(this.screenPosition.x, this.screenPosition.y, 0.5, true);\n    }\n\n    if (locator.player.currentSector == this._sector)\n    {\n      (locator.player as Player).drawAt(this.screenPosition.x, this.screenPosition.y, 0.5);\n    }\n  }\n\n  drawZoomPrompt(): void\n  {\n    textSize(14);\n    textFont(smallFontData);\n\n    fill(0, 0, 0);\n    stroke(0, 0, 100);\n    rectMode(CENTER);\n    rect(this.screenPosition.x, this.screenPosition.y + this.getRadius() + 40, textWidth(\"L - Zoom In\") + 10, 20);\n\n    fill(0, 0, 100);\n    textAlign(CENTER, CENTER);\n    text(\"L - Zoom In\", this.screenPosition.x, this.screenPosition.y + this.getRadius() + 40);\n  }\n}\n\nexport class CometButton extends SectorButton\n{\n  constructor(x: number, y: number, sector: Sector)\n  {\n    super(\"The Comet\", x, y, 40, 40, sector);\n  }\n  \n  drawPlanet(): void\n  {\n    noStroke();\n    fill(0, 0, 0);\n\n    push();\n      translate(this.screenPosition.x, this.screenPosition.y);\n      triangle(0, this.getRadius(), 0, -this.getRadius(), 130, 0);\n      stroke(200, 30, 100);\n      arc(0, 0, this._bounds.y, this._bounds.y, PI * 0.5, PI * 1.5);\n      line(0, this._bounds.y * 0.5, 130, 0);\n      line(0, -this._bounds.y * 0.5, 130, 0);\n    pop();\n  }\n}\n\nexport class HourglassTwinsButton extends SectorButton\n{\n  _centerX: number;\n  _isRightTwin: boolean = false;\n  _twinName: string;\n\n  constructor(centerX: number, y: number, isRightTwin: boolean, sector: Sector)\n  {\n    super(\"Hourglass Twin\", centerX, y, 50, 50, sector);\n    this._isRightTwin = isRightTwin;\n    this._centerX = centerX;\n    \n    if (isRightTwin) \n    {\n      this._twinName = \"Sandy \";\n      this.setPosition(centerX + 35, this.position.y);\n    }\n    else\n    {\n      this._twinName = \"Rocky \";\n      this.setPosition(centerX - 35, this.position.y);\n    }\n  }\n\n  drawName(): void\n  {\n    super.drawName(this._twinName + this.id, this._centerX);\n  }\n\n  drawNonHighlighted(): void\n  {\n    if (!this._isRightTwin)\n    {\n      stroke(60, 100, 100);\n      fill(0, 0, 0);\n      rectMode(CENTER);\n      rect(this._centerX, this.position.y, this._bounds.y * 1.5, this._bounds.y * 0.2);\n    }\n  }\n  \n  drawPlanet(): void\n  {\n    stroke(60, 100, 100);\n    fill(0, 0, 0);    \n    ellipse(this.position.x, this.position.y, this._bounds.y, this._bounds.y);\n  }\n}\n\nexport class TimberHearthButton extends SectorButton\n{\n  constructor(x: number, y: number, sector: Sector)\n  {\n    super(\"Timber Hearth\", x, y, 80, 80, sector);\n  }\n  \n  drawPlanet(): void\n  {\n    stroke(200, 100, 100);\n    fill(0, 0, 0);\n    ellipse(this.position.x, this.position.y, this._bounds.x, this._bounds.y);\n  }\n}\n\nexport class BrittleHollowButton extends SectorButton\n{\n  constructor(x: number, y: number, sector: Sector)\n  {\n    super(\"Brittle Hollow\", x, y, 80, 80, sector);\n  }\n  \n  drawPlanet(): void\n  {\n    stroke(0, 100, 100);\n    fill(0, 0, 0);\n    ellipse(this.position.x, this.position.y, this._bounds.x, this._bounds.y);\n  }\n}\n\nexport class GiantsDeepButton extends SectorButton\n{\n  constructor(x: number, y: number, sector: Sector)\n  {\n    super(\"Giant's Deep\", x, y, 150, 150, sector);\n  }\n  \n  drawPlanet(): void\n  {\n    stroke(180, 100, 100);\n    fill(0, 0, 0);\n    ellipse(this.position.x, this.position.y, this._bounds.x, this._bounds.y);\n  }\n}\n\nexport class DarkBrambleButton extends SectorButton\n{\n  constructor(x: number, y: number, sector: Sector)\n  {\n    super(\"Dark Bramble\", x, y, 230, 230, sector);\n  }\n  \n  drawPlanet(): void\n  {\n    stroke(120, 100, 100);\n    fill(0, 0, 0);\n    ellipse(this.position.x, this.position.y, this._bounds.x, this._bounds.y);\n  }\n}\n\nexport class QuantumMoonButton extends SectorButton\n{\n  _currentTarget: SectorButton;\n  _targets: SectorButton[];\n\n  constructor(targets: SectorButton[], sector: Sector)\n  {\n    super(\"Quantum Moon\", 0, 0, 30, 30, sector);\n    this._targets = targets;\n  }\n\n  collapse(): void\n  {\n    (this._sector as QuantumMoon).collapse();\n    this.updatePosition();\n  }\n\n  updatePosition(): void\n  {\n    const i: number = (this._sector as QuantumMoon).getQuantumLocation();\n\n    println(i);\n\n    if (i == 4)\n    {\n      this._currentTarget = null;\n    }\n    else\n    {\n      this._currentTarget = this._targets[i];\n    }\n\n    if (this._currentTarget != null)\n    {\n      this.setPosition(this._currentTarget.position.x - 25, this._currentTarget.position.y - this._currentTarget.getRadius() - 30);\n    }\n    else\n    {\n      this.setPosition(-1000, -1000);\n    }\n  }\n  \n  drawPlanet(): void\n  {\n    stroke(300, 50, 100);\n    fill(0, 0, 0);\n    ellipse(this.position.x, this.position.y, this._bounds.x, this._bounds.y);\n  }\n}", "import { Button } from \"./Button\";\nimport { Actor } from \"./Entity\";\nimport { OWScreen } from \"./Screen\";\nimport { Sector } from \"./Sector\";\nimport { SectorButton, QuantumMoonButton, HourglassTwinsButton, TimberHearthButton, BrittleHollowButton, GiantsDeepButton, DarkBrambleButton, CometButton } from \"./SectorButtons\";\nimport { SolarSystem } from \"./SolarSystem\";\nimport { Telescope, SignalSource, FrequencyButton } from \"./Telescope\";\nimport { Vector2 } from \"./Vector2\";\nimport { gameManager, feed, timeLoop } from \"./app\";\n\nexport class SolarSystemScreen extends OWScreen\n{\n  _player: Actor;\n  _ship: Actor;\n  _solarSystem: SolarSystem;\n    \n  _cometButton: SectorButton;\n  _hourglassButton_left: SectorButton;\n  _hourglassButton_right: SectorButton;\n  _timberButton: SectorButton;\n  _brittleButton: SectorButton;\n  _giantsButton: SectorButton;\n  _darkButton: SectorButton;\n  _quantumButton: QuantumMoonButton;\n\n  _focusSectorButton: SectorButton;\n\n  _sectorButtons: SectorButton[];\n  \n  constructor(solarSystem: SolarSystem)\n  {\n    super();\n    \n    this._solarSystem = solarSystem;\n    this._player = solarSystem.player;\n    this._ship = solarSystem.ship;\n\n    this._sectorButtons = new Array<SectorButton>();\n    const buttonHeight: number = height / 2;\n\n    this._sectorButtons.push(this._hourglassButton_left = new HourglassTwinsButton(170, buttonHeight, false, this._solarSystem.rockyTwin));\n    this._sectorButtons.push(this._hourglassButton_right = new HourglassTwinsButton(170, buttonHeight, true, this._solarSystem.sandyTwin));\n    this._sectorButtons.push(this._timberButton = new TimberHearthButton(300, buttonHeight, this._solarSystem.timberHearth));\n    this._sectorButtons.push(this._brittleButton = new BrittleHollowButton(420, buttonHeight, this._solarSystem.brittleHollow));\n    this._sectorButtons.push(this._giantsButton = new GiantsDeepButton(580, buttonHeight, this._solarSystem.giantsDeep));\n    this._sectorButtons.push(this._darkButton = new DarkBrambleButton(810, buttonHeight, this._solarSystem.darkBramble));\n    this._sectorButtons.push(this._cometButton = new CometButton(600, buttonHeight + 200, this._solarSystem.comet));\n\n    const targets: SectorButton[] = [this._hourglassButton_right, this._timberButton, this._brittleButton, this._giantsButton];\n    this._sectorButtons.push(this._quantumButton = new QuantumMoonButton(targets, this._solarSystem.quantumMoon));\n\n    for (let i: number = 0; i < this._sectorButtons.length; i++)\n    {\n      this.addButton(this._sectorButtons[i]);\n    }\n  }\n\n  onEnter(): void\n  {\n    this._quantumButton.collapse();\n  }\n\n  update(): void {}\n  \n  render(): void\n  {\n    // draw sun\n    stroke(40, 100, 100);\n    fill(0, 0, 0);\n    //fill(20, 100, 100);\n    ellipse(-430, height/2, 1000, 1000);\n\n    if (this._ship.currentSector == null)\n    {\n      this._ship.render();\n    }\n    if (this._player.currentSector == null)\n    {\n      this._player.render();\n    }\n  }\n\n  onButtonEnterHover(button: Button): void\n  {\n    if (this._sectorButtons.includes(button as SectorButton))\n    {\n      this._focusSectorButton = button as SectorButton;\n    }\n  }\n\n  onButtonExitHover(button: Button): void\n  {\n    if (button === this._focusSectorButton)\n    {\n      this._focusSectorButton = null;\n    }\n  }\n  \n  onButtonUp(button: Button): void\n  { \n    /** SECTOR SELECTION **/\n    if (this._sectorButtons.includes(button as SectorButton))\n    {\n      this.selectSector((button as SectorButton).getSector());\n    }\n  }\n  \n  selectSector(selectedSector: Sector): void {}\n\n  getSectorScreenPosition(sector: Sector): Vector2\n  {\n    for (let i: number = 0; i < this._sectorButtons.length; i++)\n    {\n      if (this._sectorButtons[i].getSector() == sector)\n      {\n        return this._sectorButtons[i].screenPosition;\n      }\n    }\n\n    return null;\n  }\n}\n\nexport class SolarSystemTelescopeScreen extends SolarSystemScreen\n{\n  _telescope: Telescope;\n  _exitButton: Button;\n  _nextFrequency: Button;\n  _previousFrequency: Button;\n\n  _signalSources: SignalSource[];\n\n  constructor(solarSystem: SolarSystem, telescope: Telescope)\n  {\n    super(solarSystem);\n    \n    this.addButton(this._nextFrequency = new FrequencyButton(true));\n    this.addButton(this._previousFrequency = new FrequencyButton(false));\n\n    this.addButtonToToolbar(this._exitButton = new Button(\"Exit\", 0, 0, 150, 50));\n\n    this._telescope = telescope;\n  }\n\n  onEnter(): void\n  {\n    super.onEnter();\n    noCursor();\n\n    // must do this after quantum moon collapses\n    this._signalSources = new Array<SignalSource>();\n    this._signalSources.push(new SignalSource(this._cometButton.screenPosition, this._cometButton.getSector()));\n    this._signalSources.push(new SignalSource(this._hourglassButton_left.screenPosition, this._hourglassButton_left.getSector()));\n    this._signalSources.push(new SignalSource(this._timberButton.screenPosition, this._timberButton.getSector()));\n    this._signalSources.push(new SignalSource(this._brittleButton.screenPosition, this._brittleButton.getSector()));\n    this._signalSources.push(new SignalSource(this._giantsButton.screenPosition, this._giantsButton.getSector()));\n    this._signalSources.push(new SignalSource(this._darkButton.screenPosition, this._darkButton.getSector()));\n    this._signalSources.push(new SignalSource(this._quantumButton.screenPosition, this._quantumButton.getSector()));\n  }\n\n  onExit(): void\n  {\n    cursor(HAND);\n  }\n\n  update(): void\n  {\n    super.update();\n    this._telescope.update(this._signalSources);\n  }\n\n  render(): void\n  {\n    super.render();\n    this._telescope.render();\n\n    if (this._focusSectorButton != null)\n    {\n      this._focusSectorButton.drawName();\n    }\n\n    if (this._focusSectorButton != null)\n    {\n      this._focusSectorButton.drawZoomPrompt();\n    }\n  }\n\n  selectSector(selectedSector: Sector): void\n  {\n    gameManager.loadSectorTelescopeView(selectedSector);\n  }\n\n  onButtonUp(button: Button): void\n  {\n    super.onButtonUp(button);\n\n    if (button == this._exitButton)\n    {\n      gameManager.popScreen();\n    }\n    else if (button == this._nextFrequency)\n    {\n      this._telescope.nextFrequency();\n    }\n    else if (button == this._previousFrequency)\n    {\n      this._telescope.previousFrequency();\n    }\n  }\n}\n\nexport class SolarSystemMapScreen extends SolarSystemScreen\n{\n  _databaseButton: Button;\n  _telescopeButton: Button;\n\n  constructor(solarSystem: SolarSystem)\n  {\n    super(solarSystem);\n    this.addButtonToToolbar(this._databaseButton = new Button(\"View Database\", 0, 0, 150, 50));\n    this.addButtonToToolbar(this._telescopeButton = new Button(\"Scan For Signals\", 0, 0, 150, 50));\n  }\n\n  render(): void\n  {\n    super.render();\n\n    if (this._focusSectorButton != null)\n    {\n      this._focusSectorButton.drawName();\n    }\n\n    feed.render();\n    timeLoop.renderTimer();\n  }\n\n  onEnter(): void\n  {\n    super.onEnter();\n    this.setActorPosition(this._player);\n    this.setActorPosition(this._ship);\n  }\n\n  setActorPosition(actor: Actor): void\n  {\n    const idlePos: Vector2 = new Vector2(200, height - 200);\n\n    // set player position\n    if (actor.lastSector != null)\n    {\n      actor.setScreenPosition(this.getSectorScreenPosition(actor.lastSector));\n    }\n    else\n    {\n      actor.setScreenPosition(idlePos);\n    }\n\n    actor.moveToScreenPosition(idlePos);\n    actor.lastSector = null;\n  }\n\n  update(): void\n  {\n    this._player.update();\n    this._ship.update();\n  }\n\n  onButtonUp(button: Button): void\n  {\n    /** OPEN DATABASE **/\n    if (button == this._databaseButton)\n    {\n      gameManager.pushScreen(gameManager.databaseScreen);\n    }\n    else if (button == this._telescopeButton)\n    {\n      gameManager.loadTelescopeView();\n    }\n\n    super.onButtonUp(button);\n  }\n\n  selectSector(selectedSector: Sector): void\n  {\n    const nextSector: Sector = selectedSector;\n    \n    // check if the player is already in a Sector...if not, fly to that Sector\n    if (this._solarSystem.ship.currentSector == null)\n    {\n      nextSector.addActor(this._solarSystem.ship);\n    }\n    \n    // check if the ship is already in a Sector...if not fly to that Sector\n    if (this._solarSystem.player.currentSector == null)\n    {\n      nextSector.addActor(this._solarSystem.player);\n    }\n\n    gameManager.loadSector(nextSector);\n    nextSector.onArrival();\n  }\n}", "import { Button } from \"./Button\";\nimport { OWScreen } from \"./Screen\";\nimport { feed, playerData, gameManager } from \"./app\";\n\nexport class SupernovaScreen extends OWScreen\n{\n  initTime: number = 0;\n  collapseTime: number;\n  supernovaTime: number;\n  collapsePercent: number = 0;\n  supernovaPercent: number = 0;\n\n  static SUN_SIZE: number = 300;\n  static COLLAPSE_DURATION: number = 2000;\n\n  static SUPERNOVA_SIZE: number = 2000;\n  static SUPERNOVA_DURATION: number = 2000;\n\n  constructor()\n  {\n    super();\n  }\n  \n  onEnter(): void\n  {\n    this.initTime = millis();\n    this.collapseTime = this.initTime + 1 * 500;\n    this.supernovaTime = this.collapseTime + SupernovaScreen.COLLAPSE_DURATION;\n\n    feed.clear();\n    feed.publish(\"the sun is going supernova!\", true);\n  }\n  \n  onExit(): void {}\n  \n  update(): void\n  {\n    this.collapsePercent = constrain((millis() - this.collapseTime) / SupernovaScreen.COLLAPSE_DURATION, 0, 1);\n    this.collapsePercent = this.collapsePercent * this.collapsePercent * this.collapsePercent;\n\n    this.supernovaPercent = constrain((millis() - this.supernovaTime) / SupernovaScreen.SUPERNOVA_DURATION, 0, 1);\n    this.supernovaPercent = this.supernovaPercent * this.supernovaPercent;\n\n    if (this.supernovaPercent == 1)\n    {\n      playerData.killPlayer();\n    }\n  }\n  \n  render(): void\n  {\n    push();\n    translate(width/2, height/2);\n\n      // draw supernova\n      noStroke();\n      fill(300 * this.supernovaPercent, 100, 100);\n      ellipse(0, 0, 5 + SupernovaScreen.SUPERNOVA_SIZE * this.supernovaPercent, 5 + SupernovaScreen.SUPERNOVA_SIZE * this.supernovaPercent * (1 - this.supernovaPercent * 0.5));\n\n      // draw sun\n      if (this.collapsePercent < 1)\n      {\n        stroke(40, 100, 100);\n        fill(0, 0, 0);\n        ellipse(0, 0, SupernovaScreen.SUN_SIZE * (1 - this.collapsePercent), SupernovaScreen.SUN_SIZE * (1 - this.collapsePercent));\n      }\n\n    pop();\n\n    feed.render();\n  }\n  \n  onButtonUp(button: Button): void {}\n}\n\nexport class FlashbackScreen extends OWScreen\n{\n  initTime: number = 0;\n  lastSpawnTime: number = 0;\n  flashbackPercent: number = 0;\n\n  _ringSizes: number[];\n\n  static FLASHBACK_DURATION: number = 2200;\n\n  constructor()\n  {\n    super();\n\n    this._ringSizes = new Array<number>();\n  }\n  \n  onEnter(): void\n  {\n    this.initTime = millis();\n\n    feed.clear();\n    feed.publish(\"?!gnineppah s'tahW\", true);\n  }\n  \n  onExit(): void\n  {\n\n  }\n  \n  update(): void\n  {\n    if (millis() - this.lastSpawnTime > 50 && random(1) > 0.3)\n    {\n      this.lastSpawnTime = millis();\n      this._ringSizes.push(5.0);\n    }\n\n    for (let i: number = 0; i < this._ringSizes.length; i++)\n    {\n      this._ringSizes[i] = this._ringSizes[i] + this._ringSizes[i] * 0.1 + 0.5;\n    }\n\n    if (this.getFlashBackPercent() == 1)\n    {\n      gameManager.resetTimeLoop();\n    }\n  }\n\n  getFlashBackPercent(): number\n  {\n    return constrain((millis() - this.initTime) / FlashbackScreen.FLASHBACK_DURATION, 0, 1);\n  }\n  \n  render(): void\n  {\n    push();\n    translate(width/2, height/2);\n\n      for (let i: number = 0; i < this._ringSizes.length; i++)\n      {\n        stroke(0, 0, 100);\n        noFill();\n        ellipse(0, 0, this._ringSizes[i], this._ringSizes[i]);\n      }\n\n    pop();\n\n    const fadeAlpha: number = constrain((this.getFlashBackPercent() - 0.9) / 0.1, 0, 1);\n    fill(0, 0, 100, fadeAlpha * 100);\n    rectMode(CORNER);\n    rect(0, 0, width, height);\n\n    feed.render();\n  }\n  \n  onButtonUp(button: Button): void {}\n}\n\nexport class GameOverScreen extends OWScreen\n{\n  constructor()\n  {\n    super();\n    this.addButtonToToolbar(new Button(\"Try Again\"));\n  }\n\n  update(): void {}\n\n  render(): void\n  {\n    fill(0, 90, 90);\n    textAlign(CENTER, CENTER);\n    textSize(100);\n    text(\"You Are Dead\", width/2, height/2);\n  }\n\n  onButtonUp(button: Button): void\n  {\n    gameManager.resetTimeLoop();\n  }\n}", "import { DatabaseScreen } from \"./DatabaseScreen\";\nimport { SectorName } from \"./Enums\";\nimport { DeathByAnglerfishScreen, DiveAttemptScreen, FollowTheVineScreen, AncientVesselScreen, TimeLoopCentralScreen, EyeOfTheUniverseScreen, BrambleOutskirtsScreen } from \"./EventScreen\";\nimport { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { Locator } from \"./Locator\";\nimport { ScreenManager } from \"./ScreenManager\";\nimport { Sector } from \"./Sector\";\nimport { SectorScreen } from \"./SectorScreen\";\nimport { SectorTelescopeScreen } from \"./SectorTelescopeScreen\";\nimport { SolarSystem } from \"./SolarSystem\";\nimport { SolarSystemMapScreen, SolarSystemTelescopeScreen } from \"./SolarSystemScreen\";\nimport { FlashbackScreen, GameOverScreen } from \"./SupernovaScreen\";\nimport { Telescope } from \"./Telescope\";\nimport { TitleScreen } from \"./TitleScreen\";\nimport { messenger, feed, timeLoop, playerData, locator, resetLocator } from \"./app\";\n\nexport class GameManager extends ScreenManager implements GlobalObserver\n{\n  // game screens\n  titleScreen: TitleScreen;\n  databaseScreen: DatabaseScreen;\n  solarSystemMapScreen: SolarSystemMapScreen;\n  \n  // game objects\n  _solarSystem: SolarSystem;\n  _telescope: Telescope;\n\n  _flashbackTriggered: boolean = false;\n  \n  newGame(): void\n  {\n    this.setupSolarSystem();\n\n    this.titleScreen = new TitleScreen();\n    this.databaseScreen = new DatabaseScreen();\n    \n    this.pushScreen(this.titleScreen);\n  }\n\n  resetTimeLoop(): void\n  {\n    this._flashbackTriggered = false;\n    this._screenStack.length = 0;\n    this.setupSolarSystem();\n    this.loadSector(SectorName.TIMBER_HEARTH);\n  }\n\n  setupSolarSystem(): void\n  {\n    messenger.removeAllObservers();\n    messenger.addObserver(this);\n\n    feed.init();\n    timeLoop.init();\n    playerData.init();\n\n    this._telescope = new Telescope();\n\n    this._solarSystem = new SolarSystem();\n    this._solarSystem.timberHearth.addActor(this._solarSystem.player, \"Village\");\n\n    this.solarSystemMapScreen = new SolarSystemMapScreen(this._solarSystem);\n\n    if (playerData.knowsLaunchCodes())\n    {\n      messenger.sendMessage(\"spawn ship\");\n    }\n\n    resetLocator();\n  }\n\n  // runs after everything else updates\n  lateUpdate(): void\n  {\n    // check if the sun explodes (this check has to be last to override all other screens)\n    timeLoop.lateUpdate();\n\n    // check if the player died\n    if (playerData.isPlayerDead() && !this._flashbackTriggered)\n    {\n      this._flashbackTriggered = true;\n\n      if (timeLoop.getEnabled())\n      {\n        this.swapScreen(new FlashbackScreen());\n      }\n      else\n      {\n        this.swapScreen(new GameOverScreen());\n      }\n    }\n  }\n\n  onReceiveGlobalMessage(message: Message): void\n  {\n    // TRIGGERED FROM SECTORSCREEN (NOT EXPLORE SCREEN)\n    if (message.id === \"death by anglerfish\")\n    {\n      this.pushScreen(new DeathByAnglerfishScreen());\n    }\n    else if (message.id === \"dive attempt\")\n    {\n      this.pushScreen(new DiveAttemptScreen());\n    }\n    // TRIGGERED FROM EVENT SCREEN\n    else if (message.id === \"follow the vine\")\n    {\n      this.swapScreen(new FollowTheVineScreen());\n    }\n    // TRIGGERED FROM EXPLORE DATA\n    else if (message.id === \"explore ancient vessel\")\n    {\n      this.swapScreen(new AncientVesselScreen());\n    }\n    else if (message.id === \"time loop central\")\n    {\n      this.swapScreen(new TimeLoopCentralScreen());\n    }\n    else if (message.id === \"older than the universe\")\n    {\n      this.swapScreen(new EyeOfTheUniverseScreen());\n    }\n    else if (message.id === \"explore bramble outskirts\")\n    {\n      this.swapScreen(new BrambleOutskirtsScreen());\n    }\n  }\n\n  loadTelescopeView(): void\n  {\n    this.pushScreen(new SolarSystemTelescopeScreen(this._solarSystem, this._telescope));\n\n    // if (_solarSystem.player.currentSector != null)\n    // {\n    //   loadSectorTelescopeView(_solarSystem.player.currentSector);\n    // }\n  }\n\n  loadSectorTelescopeView(sector: Sector): void\n  {\n    this.pushScreen(new SectorTelescopeScreen(sector, this._telescope));\n  }\n  \n  loadSolarSystemMap(): void\n  {\n    this.swapScreen(this.solarSystemMapScreen);\n  }\n  \n  loadSector(sectorName: SectorName): void\n  loadSector(sector: Sector): void\n  loadSector(sectorOrName: Sector | SectorName): void\n  {\n    const sector = sectorOrName instanceof Sector ? sectorOrName : this._solarSystem.getSectorByName(sectorOrName)\n    this.swapScreen(new SectorScreen(sector, this._solarSystem.player, this._solarSystem.ship));\n  }\n}", "import { Actor } from \"./Entity\";\nimport { QuantumMoon } from \"./SectorLibrary\";\nimport { gameManager } from \"./app\";\n\nexport class Locator\n{\n\tplayer: Actor;\n\tship: Actor;\n\n\t_quantumSector: QuantumMoon;\n\n\tconstructor()\n\t{\n\t\tthis.player = gameManager._solarSystem.player;\n\t\tthis.ship = gameManager._solarSystem.ship;\n\t\tthis._quantumSector = gameManager._solarSystem.quantumMoon as QuantumMoon;\n\t}\n\n\tgetQuantumMoonLocation(): number\n\t{\n\t\treturn this._quantumSector.getQuantumLocation();\n\t}\n}", "import { Color } from \"p5\";\nimport { mediumFontData, messenger, smallFontData } from \"./app\";\nimport { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { Translator } from './Translator';\n\nexport class StatusFeed implements GlobalObserver\n{\n  static MAX_LINES: number = 3;\n  \n  _feed: StatusLine[];\n\n  init(): void\n  {\n    this._feed = new Array<StatusLine>();\n    messenger.addObserver(this);\n  }\n\n  clear(): void\n  {\n    this._feed.length = 0;\n  }\n\n  onReceiveGlobalMessage(message: Message): void\n  {\n\n  }\n\n  async publish(newLine: string, important: boolean = false): Promise<void> {\n    const translator = Translator.getInstance();\n    const translatedText = await translator.translate(newLine);\n    let displayText = `${newLine}\\n[\u8BD1: ${translatedText}]`;\n    \n    this._feed.push(new StatusLine(displayText, important));\n\n    if (this._feed.length > StatusFeed.MAX_LINES)\n    {\n      this._feed.splice(0, 1);\n    }\n  }\n  \n  render(): void\n  {\n    for (let i: number = 0; i < this._feed.length; i++)\n    {\n      if (!this._feed[i].draw(20, 30 + i * 45))\n      {\n        break; // break if the current line hasn't finished displaying\n      }\n    }\n  }\n}\n\nexport class StatusLine\n{\n  _line: string;\n  _initTime: number;\n  _displayTriggered: boolean = false;\n  _lineColor: Color = color(0, 0, 100);\n\n  static SPEED: number = 0.08;\n\n  constructor(newLine: string, important: boolean)\n  {\n    this._line = newLine;\n\n    if (important)\n    {\n      this._lineColor = color(100, 100, 100);\n    }\n  }\n\n  draw(x: number, y: number): boolean\n  {\n    if (!this._displayTriggered)\n    {\n      this._initTime = millis();\n      this._displayTriggered = true;\n    }\n\n    textAlign(LEFT);\n    fill(this._lineColor);\n    \n    const lines = this._line.split('\\n');\n    let currentY = y;\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      if (i === 0) {\n        textFont(mediumFontData);\n        textSize(18);\n      } else {\n        textFont('SimSun', 16);\n        x += 10;\n        currentY += 5;\n      }\n      \n      text(line.substring(0, min(line.length, this.getDisplayLength())), x, currentY);\n      currentY += 20;\n      \n      if (i > 0) {\n        x -= 10;\n      }\n    }\n    \n    textFont(smallFontData);\n    return this._line.length <= this.getDisplayLength();\n  }\n\n  getDisplayLength(): number\n  {\n    return (int)((millis() - this._initTime) * StatusLine.SPEED);\n  }\n}", "import { GlobalObserver, Message } from \"./GlobalMessenger\";\nimport { SupernovaScreen } from \"./SupernovaScreen\";\nimport { feed, messenger, gameManager, playerData } from \"./app\";\n\nexport class TimeLoop implements GlobalObserver\n{\n\tstatic ACTION_POINTS_PER_LOOP: number = 15;\n\t_actionPoints: number;\n\n\t_isTimeLoopEnabled: boolean;\n\t_triggerSupernova: boolean;\n\n\tinit(): void\n\t{\n\t\tthis._actionPoints = TimeLoop.ACTION_POINTS_PER_LOOP;\n\t\tthis._isTimeLoopEnabled = true;\n\t\tthis._triggerSupernova = false;\n\t\t\n\t\tfeed.publish(\"You wake up next to a campfire near your village's launch tower. Today's the big day!\");\n\t\tfeed.publish(\"In the sky, you notice a bright object flying away from Giant's Deep...\", true);\n\n\t\tmessenger.addObserver(this);\n\t}\n\n\tonReceiveGlobalMessage(message: Message): void\n\t{\n\t\tif (message.id === \"disable time loop\" && this._isTimeLoopEnabled)\n\t\t{\n\t\t\tthis._isTimeLoopEnabled = false;\n\t\t\tfeed.publish(\"you disable the time loop device\", true);\n\t\t}\n\t}\n\n\tlateUpdate(): void\n\t{\n\t\tif (this._triggerSupernova)\n\t\t{\n\t\t\tthis._triggerSupernova = false;\n\t\t\tgameManager.swapScreen(new SupernovaScreen());\n\t\t}\n\t}\n\n\tgetEnabled(): boolean\n\t{\n\t\treturn this._isTimeLoopEnabled;\n\t}\n\n\tgetLoopPercent(): number\n\t{\n\t\treturn (TimeLoop.ACTION_POINTS_PER_LOOP - this._actionPoints) / TimeLoop.ACTION_POINTS_PER_LOOP;\n\t}\n\n\tgetActionPoints(): number\n\t{\n\t\treturn this._actionPoints;\n\t}\n\n\twaitFor(minutes: number): void\n\t{\n\t\tfeed.publish(\"you chill out for 1 minute\", true);\n\t\tthis.spendActionPoints(minutes);\n\t}\n\n\tspendActionPoints(points: number): void\n\t{\n\t\tif (playerData.isPlayerAtEOTU()) {return;}\n\t\t\n\t\tconst lastActionPoints: number = this._actionPoints;\n\n\t\tthis._actionPoints = max(0, this._actionPoints - points);\n\t\tmessenger.sendMessage(\"action points spent\");\n\n\t\t// detect when you have 1/4 your action points remaining\n\t\tif (lastActionPoints > TimeLoop.ACTION_POINTS_PER_LOOP * 0.25 && this._actionPoints <= TimeLoop.ACTION_POINTS_PER_LOOP * 0.25)\n\t\t{\n\t\t\tfeed.publish(\"you notice the Sun is getting awfully big and red\", true);\n\t\t}\n\n\t\tif (this._actionPoints == 0)\n\t\t{\n\t\t\tthis._triggerSupernova = true;\n\t\t}\n\t}\n\n\trenderTimer(): void\n\t{\n\t\tif (playerData.isPlayerAtEOTU()) {return;}\n\n\t\tconst r: number = 50;\n\t\tconst x: number = 50;\n\t\tconst y: number = height - 50;\n\n\t\tstroke(0, 0, 100);\n\t\tfill(0, 0, 0);\n\t\tellipse(x, y, r, r);\n\t\tfill(30, 100, 100);\n\t\tarc(x, y, r, r, 0 - PI * 0.5 + TAU * this.getLoopPercent(), 1.5 * PI);\n\t\t// fill(0, 0, 100);\n\t\t// textSize(20);\n\t\t// textAlign(RIGHT, TOP);\n\t\t// text(\"Time Remaining: \" + _actionPoints + \" min\", width - 25, 25);\n\t}\n}", "import { Font } from \"p5\";\nimport { AudioManager } from \"./AudioManager\";\nimport { Frequency } from \"./Enums\";\nimport { GameManager } from \"./GameManager\";\nimport { GlobalMessenger } from \"./GlobalMessenger\";\nimport { Locator } from \"./Locator\";\nimport { PlayerData } from \"./PlayerData\";\nimport { StatusFeed } from \"./StatusFeed\";\nimport { TimeLoop } from \"./TimeLoop\";\nimport { Minim, preloadAudio, preloadJSONObject, println } from \"./compat\";\nimport { GameSave } from \"./GameSave\";\n\n/*** GLOBALS ***/\nexport const TEXT_SIZE: number = 14;\n\nexport let locator: Locator;\nexport let gameManager: GameManager;\nexport let timeLoop: TimeLoop;\nexport let messenger: GlobalMessenger;\nexport let feed: StatusFeed;\nexport let playerData: PlayerData;\n \nexport let minim: Minim;\nexport let audioManager: AudioManager;\n\n/*** DEBUG ***/\nexport const EDIT_MODE: boolean = false;\nexport const SKIP_TITLE: boolean = false;\nexport const START_WITH_LAUNCH_CODES: boolean = false;\nexport const START_WITH_CLUES: boolean = false;\nexport const START_WITH_SIGNALS: boolean = false;\nexport const START_WITH_COORDINATES: boolean = false;\n\nlet lastMillis: number;\nlet deltaMillis: number;\n\nexport let smallFontData: Font;\nexport let mediumFontData: Font;\n\n(window as any).preload = function preload(): void {\n  smallFontData = loadFont(\"data/fonts/Inconsolata.ttf\");\n  mediumFontData = loadFont(\"data/fonts/Inconsolata.ttf\");\n  preloadAudio(\"data/audio/ow_kazoo_theme.mp3\");\n  preloadJSONObject(\"data/sectors/brittle_hollow.json\");\n  preloadJSONObject(\"data/sectors/comet.json\");\n  preloadJSONObject(\"data/sectors/dark_bramble.json\");\n  preloadJSONObject(\"data/sectors/eye_of_the_universe.json\");\n  preloadJSONObject(\"data/sectors/giants_deep.json\");\n  preloadJSONObject(\"data/sectors/quantum_moon.json\");\n  preloadJSONObject(\"data/sectors/rocky_twin.json\");\n  preloadJSONObject(\"data/sectors/sandy_twin.json\");\n  preloadJSONObject(\"data/sectors/timber_hearth.json\");\n};\n\n(window as any).setup = function setup(): void\n{\n  const canvas = document.getElementById(\"game-canvas\");\n  createCanvas(1440, 1080, null, canvas);\n\n  // \u8BBE\u7F6E\u50CF\u7D20\u5BC6\u5EA6\u4EE5\u6539\u5584\u7F29\u653E\u8D28\u91CF\n  pixelDensity(2);\n\n  // Prevent p5 from setting canvas size, we do it in css.\n  canvas.style.removeProperty(\"width\");\n  canvas.style.removeProperty(\"height\");\n\n  // \u6DFB\u52A0\u5E73\u6ED1\u8BBE\u7F6E\n  canvas.style.imageRendering = 'auto';\n  \n  // Disable context menu on canvas,\n  // to avoid interfering with game's right click.\n  canvas.oncontextmenu = () => false;\n\n  canvas.ontouchstart = (e) => {\n    // Simulate right click on p5 when touching with a second finger\n    mouseButton = e.touches.length === 2 ? RIGHT : LEFT;\n  }\n\n  const fullScreenButton = document.getElementById(\"full-screen-button\");\n  fullScreenButton.onclick = () => {\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n    } else {\n      document.documentElement.requestFullscreen();\n    }\n  }\n\n  noSmooth();\n  colorMode(HSB, 360, 100, 100, 100);\n  rectMode(CENTER);\n  ellipseMode(CENTER);\n  \n  smallFont();\n    \n  minim = new Minim();\n\n  initGame();\n};\n\nfunction initGame(): void\n{\n  const startLoadTime: number = millis();\n  \n  timeLoop = new TimeLoop();\n  audioManager = new AudioManager();\n  messenger = new GlobalMessenger();\n  feed = new StatusFeed();\n  gameManager = new GameManager();\n  playerData =  GameSave.loadData();\n  gameManager.newGame();\n  \n  println(\"Load time:\", (millis() - startLoadTime));\n}\n\n(window as any).draw = function draw(): void\n{\n  gameManager.runGameLoop();\n\n  // stroke(0, 0, 100);\n  // fill(0, 0, 0);\n  // triangle(mouseX, mouseY, mouseX, mouseY - 10, mouseX + 10, mouseY - 10);\n  \n  deltaMillis = millis() - lastMillis;\n  lastMillis = millis();\n  \n  //println(deltaMillis);\n};\n\nexport function frequencyToString(frequency: Frequency): string\n{\n  switch(frequency)\n  {\n    case Frequency.TRAVELER:\n      return \"Traveler Frequency\";\n    case Frequency.BEACON:\n      return \"Distress Beacon\";\n    case Frequency.QUANTUM:\n      return \"Quantum Fluctuations\";\n    default:\n      return \"\";\n  }\n}\n\nexport function resetLocator(): void {\n  locator = new Locator();\n}\n\nexport function smallFont(): void\n{\n  textSize(14);\n  textFont(smallFontData);\n}\n\nexport function mediumFont(): void\n{\n  textSize(18);\n  textFont(mediumFontData);\n}\n"],
  "mappings": "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",
  "names": ["preloadCache", "println", "args", "preloadJSONObject", "path", "preloadAudio", "loadJSONObject", "JSONObject", "saveJSONObject", "obj", "exit", "Minim", "sound", "AudioPlayer", "JSONArray", "data", "index", "value", "key", "_JSONObject", "defaultValue", "SoundLibrary", "_SoundLibrary", "println", "minim", "AudioManager", "_AudioManager", "sound", "Frequency", "Vector2", "_Vector2", "vecOrX", "y", "vec", "v", "value", "mag", "v1", "v2", "dot", "Entity", "posOrX", "y", "pos", "Vector2", "newPosOrX", "parentScreenPos", "i", "newScreenPos", "child", "Actor", "_Actor", "d", "v", "node", "screenPos", "Player", "xPos", "yPos", "s", "Ship", "player", "skipFill", "Probe", "Button", "Entity", "buttonID", "x", "y", "w", "h", "Vector2", "newColor", "prompt", "observer", "alpha", "smallFontData", "OWScreen", "i", "Vector2", "Entity", "button", "toolbarWidth", "xPos", "buttonHalfWidth", "bgColor", "starColor", "playerData", "j", "Translator", "_Translator", "text", "cached", "response", "translation", "error", "tokenResponse", "DatabaseScreen", "OWScreen", "Button", "Entity", "i", "playerData", "clueButton", "ClueButton", "observer", "clue", "feed", "button", "gameManager", "x", "y", "w", "h", "_displayText", "mediumFontData", "displayText", "translatedText", "Translator", "finalText", "symbolColor", "GlobalMessenger", "observer", "messageOrID", "message", "Message", "i", "messageID", "PlayerData", "START_WITH_LAUNCH_CODES", "START_WITH_COORDINATES", "START_WITH_SIGNALS", "Clue", "messenger", "message", "feed", "GameSave", "locator", "gameManager", "frequency", "frequencyToString", "i", "id", "curiosity", "name", "description", "START_WITH_CLUES", "GameSave", "data", "playerData", "PlayerData", "playerDataSave", "TitleScreen", "OWScreen", "GameSave", "text", "xOffset", "Button", "SKIP_TITLE", "gameManager", "AudioManager", "SoundLibrary", "button", "exit", "EndScreen", "EventScreen", "_EventScreen", "OWScreen", "Button", "mediumFontData", "displayText", "translatedText", "Translator", "finalText", "feed", "timeLoop", "button", "gameManager", "clue", "DeathByAnglerfishScreen", "playerData", "DiveAttemptScreen", "TeleportScreen", "teleportText", "destination", "messenger", "Message", "MoveToScreen", "moveText", "SectorArrivalScreen", "arrivalText", "sectorName", "QuantumArrivalScreen", "QuantumEntanglementScreen", "locator", "FollowTheVineScreen", "AncientVesselScreen", "TimeLoopCentralScreen", "EyeOfTheUniverseScreen", "EndScreen", "BrambleOutskirtsScreen", "ScreenManager", "activeScreen", "lowestRenderIndex", "i", "println", "newScreen", "nextScreen", "ExploreData", "node", "nodeObj", "JSONArray", "i", "exploreObj", "turnCycle", "turn", "timeLoop", "clueID", "gameManager", "messenger", "eventID", "MoveToScreen", "TeleportScreen", "playerData", "pathArray", "feed", "FrequencyButton", "Button", "rightFacing", "Vector2", "alpha", "Telescope", "signalSources", "i", "frequencyText", "frequencyToString", "playerData", "xPos", "mediumFontData", "smallFontData", "index", "Frequency", "f", "SignalSource", "Entity", "nodeOrPos", "sector", "OWNode", "signal", "telescopePos", "frequency", "dist", "u", "Signal", "signalType", "OWNode", "_OWNode", "Entity", "xOrID", "yOrObj", "messenger", "Button", "nodeJSONObj", "ExploreData", "EDIT_MODE", "Signal", "println", "message", "node", "isPlayerInShip", "playerNode", "nodeOrID", "visible", "connection", "playerData", "textPos", "Vector2", "TEXT_SIZE", "observer", "button", "i", "NodeConnection", "n1", "n2", "connectionObj", "EDIT_MODE", "playerNode", "node", "startingNode", "messenger", "visible", "dir", "dist", "l", "segmentLength", "startPos", "endPos", "tip", "base", "right", "left", "Sector", "Vector2", "Entity", "OWNode", "messenger", "offsetX", "offsetY", "filename", "loadJSONObject", "nodes", "nodeName", "connectionJSONArray", "i", "connection", "node1", "node2", "NodeConnection", "name", "nodeObj", "saveJSONObject", "println", "message", "node", "gameManager", "SectorArrivalScreen", "locator", "QuantumEntanglementScreen", "clue", "isPlayerInShip", "playerNode", "indexOrID", "signalSources", "SignalSource", "nodeSignals", "observer", "actor", "nodeOrName", "atNode", "ExploreScreen", "_ExploreScreen", "OWScreen", "location", "Button", "mediumFontData", "displayText", "translatedText", "Translator", "finalText", "feed", "timeLoop", "clue", "gameManager", "locator", "button", "NodeAction", "observer", "button", "description", "ProbeAction", "player", "location", "feed", "probe", "Probe", "ExploreAction", "timeLoop", "gameManager", "ExploreScreen", "TravelAction", "ship", "destination", "prompt", "connection", "messenger", "SectorEditor", "sector", "Button", "Vector2", "button", "node", "SectorScreen", "OWScreen", "sector", "player", "ship", "SectorEditor", "Button", "button", "gameManager", "feed", "timeLoop", "clue", "exploreData", "ExploreScreen", "EDIT_MODE", "mediumFontData", "target", "actions", "smallFont", "yOffset", "promptWidth", "i", "succeeded", "node", "connection", "ProbeAction", "TravelAction", "ExploreAction", "SectorTelescopeScreen", "OWScreen", "sector", "telescope", "FrequencyButton", "Button", "button", "gameManager", "AnglerfishNode", "OWNode", "nodeName", "nodeJSONObj", "messenger", "QuantumNode", "OWNode", "name", "nodeJSON", "quantumState", "visible", "connection", "locator", "Comet", "Sector", "RockyTwin", "SandyTwin", "TimberHearth", "BrittleHollow", "radius", "start", "end", "spirals", "step", "x0", "y0", "t", "theta", "r", "x3", "y3", "x2", "y2", "x1", "y1", "GiantsDeep", "DarkBramble", "i", "index", "name", "nodeObj", "newNode", "AnglerfishNode", "Vector2", "OWNode", "QuantumMoon", "message", "locator", "gameManager", "QuantumArrivalScreen", "QuantumNode", "tLocation", "actor", "EyeOfTheUniverse", "SolarSystem", "messenger", "println", "Comet", "RockyTwin", "SandyTwin", "TimberHearth", "BrittleHollow", "GiantsDeep", "DarkBramble", "QuantumMoon", "EyeOfTheUniverse", "Player", "Ship", "message", "tNode", "node", "feed", "i", "teleportNode", "gameManager", "nodeName", "sectorName", "SectorButton", "Button", "id", "x", "y", "w", "h", "sector", "OWNode", "name", "xPos", "locator", "smallFontData", "CometButton", "HourglassTwinsButton", "centerX", "isRightTwin", "TimberHearthButton", "BrittleHollowButton", "GiantsDeepButton", "DarkBrambleButton", "QuantumMoonButton", "targets", "i", "println", "SolarSystemScreen", "OWScreen", "solarSystem", "buttonHeight", "HourglassTwinsButton", "TimberHearthButton", "BrittleHollowButton", "GiantsDeepButton", "DarkBrambleButton", "CometButton", "targets", "QuantumMoonButton", "i", "button", "selectedSector", "sector", "SolarSystemTelescopeScreen", "telescope", "FrequencyButton", "Button", "SignalSource", "gameManager", "SolarSystemMapScreen", "feed", "timeLoop", "actor", "idlePos", "Vector2", "nextSector", "SupernovaScreen", "_SupernovaScreen", "OWScreen", "feed", "playerData", "button", "FlashbackScreen", "_FlashbackScreen", "i", "gameManager", "fadeAlpha", "GameOverScreen", "Button", "GameManager", "ScreenManager", "TitleScreen", "DatabaseScreen", "messenger", "feed", "timeLoop", "playerData", "Telescope", "SolarSystem", "SolarSystemMapScreen", "resetLocator", "FlashbackScreen", "GameOverScreen", "message", "DeathByAnglerfishScreen", "DiveAttemptScreen", "FollowTheVineScreen", "AncientVesselScreen", "TimeLoopCentralScreen", "EyeOfTheUniverseScreen", "BrambleOutskirtsScreen", "SolarSystemTelescopeScreen", "sector", "SectorTelescopeScreen", "sectorOrName", "Sector", "SectorScreen", "Locator", "gameManager", "StatusFeed", "_StatusFeed", "messenger", "message", "newLine", "important", "translatedText", "Translator", "displayText", "StatusLine", "i", "_StatusLine", "x", "y", "lines", "currentY", "line", "mediumFontData", "smallFontData", "TimeLoop", "_TimeLoop", "feed", "messenger", "message", "gameManager", "SupernovaScreen", "minutes", "points", "playerData", "lastActionPoints", "r", "x", "y", "TEXT_SIZE", "locator", "gameManager", "timeLoop", "messenger", "feed", "playerData", "minim", "audioManager", "EDIT_MODE", "SKIP_TITLE", "START_WITH_LAUNCH_CODES", "START_WITH_CLUES", "START_WITH_SIGNALS", "START_WITH_COORDINATES", "lastMillis", "deltaMillis", "smallFontData", "mediumFontData", "preloadAudio", "preloadJSONObject", "canvas", "e", "fullScreenButton", "smallFont", "Minim", "initGame", "startLoadTime", "TimeLoop", "AudioManager", "GlobalMessenger", "StatusFeed", "GameManager", "GameSave", "println", "frequencyToString", "frequency", "resetLocator", "Locator", "mediumFont"]
}
